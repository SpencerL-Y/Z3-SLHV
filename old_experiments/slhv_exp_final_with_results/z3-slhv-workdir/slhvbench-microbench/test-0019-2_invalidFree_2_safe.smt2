(set-logic SLHV)
(declare-hvar emp IntHeap)
(declare-locvar nil IntLoc)
(declare-datatype pt_record_0 ((Pt_R_0 (loc IntLoc))))
(declare-datatype pt_record_1 ((Pt_R_1 (data Int))))
(declare-const invalidFree_2 Bool)
(declare-const loc_2 Int)
(declare-const invalidFree_1 Bool)
(declare-hvar H_1 IntHeap)
(declare-hvar H_2 IntHeap)
(declare-hvar AH_1 IntHeap)
(declare-hvar AH_2 IntHeap)
(declare-const $r_main0_1 Int)
(declare-const $r_main0_2 Int)
(declare-const $i10_main0_1 Int)
(declare-const $i10_main0_2 Int)
(declare-locvar $p9_main0_1 IntLoc)
(declare-locvar $p9_main0_2 IntLoc)
(declare-locvar $p8_main0_1 IntLoc)
(declare-locvar $p8_main0_2 IntLoc)
(declare-locvar $p7_main0_1 IntLoc)
(declare-locvar $p7_main0_2 IntLoc)
(declare-locvar $p6_main0_1 IntLoc)
(declare-locvar $p6_main0_2 IntLoc)
(declare-locvar $p5_main0_1 IntLoc)
(declare-locvar $p5_main0_2 IntLoc)
(declare-locvar $p4_main0_1 IntLoc)
(declare-locvar $p4_main0_2 IntLoc)
(declare-locvar $p3_main0_1 IntLoc)
(declare-locvar $p3_main0_2 IntLoc)
(declare-locvar $p2_main0_1 IntLoc)
(declare-locvar $p2_main0_2 IntLoc)
(declare-locvar $p1_main0_1 IntLoc)
(declare-locvar $p1_main0_2 IntLoc)
(declare-locvar $p13_main0_1 IntLoc)
(declare-locvar $p13_main0_2 IntLoc)
(declare-locvar $p12_main0_1 IntLoc)
(declare-locvar $p12_main0_2 IntLoc)
(declare-locvar $p11_main0_1 IntLoc)
(declare-locvar $p11_main0_2 IntLoc)
(declare-locvar $p0_main0_1 IntLoc)
(declare-locvar $p0_main0_2 IntLoc)
(declare-const loc_1 Int)
(declare-const invalidFree2_2 Bool)
(declare-hvar H7_2 IntHeap)
(declare-hvar AH5_2 IntHeap)
(declare-const invalidFree1_2 Bool)
(declare-hvar h10_2 IntHeap)
(declare-locvar l24_2 IntLoc)
(declare-const d7_2 Int)
(declare-hvar H6_2 IntHeap)
(declare-const d6_2 Int)
(declare-locvar l20_2 IntLoc)
(declare-locvar l23_2 IntLoc)
(declare-locvar l22_2 IntLoc)
(declare-locvar l21_2 IntLoc)
(declare-hvar ah3 IntHeap)
(declare-hvar AH4_2 IntHeap)
(declare-const d8_2 Int)
(declare-hvar ah4_2 IntHeap)
(declare-hvar h9_2 IntHeap)
(declare-locvar l19_2 IntLoc)
(declare-const d4_2 Int)
(declare-const d3_2 Int)
(declare-locvar l15_2 IntLoc)
(declare-locvar l18_2 IntLoc)
(declare-locvar l17_2 IntLoc)
(declare-locvar l16_2 IntLoc)
(declare-hvar ah1 IntHeap)
(declare-const d5_2 Int)
(declare-hvar ah2_2 IntHeap)
(declare-const invalidFree_0 Bool)
(declare-const $r_main0_0 Int)
(declare-locvar $p13_main0_0 IntLoc)
(declare-locvar $p12_main0_0 IntLoc)
(declare-locvar $p11_main0_0 IntLoc)
(declare-hvar H5_1 IntHeap)
(declare-hvar AH3_1 IntHeap)
(declare-locvar $p9_main01_1 IntLoc)
(declare-locvar $p8_main01_1 IntLoc)
(declare-locvar $p7_main01_1 IntLoc)
(declare-locvar $p6_main01_1 IntLoc)
(declare-locvar $p5_main01_1 IntLoc)
(declare-locvar $p4_main01_1 IntLoc)
(declare-locvar $p3_main01_1 IntLoc)
(declare-locvar $p2_main01_1 IntLoc)
(declare-locvar $p1_main01_1 IntLoc)
(declare-locvar $p0_main01_1 IntLoc)
(declare-const $i10_main01_1 Int)
(declare-locvar l13_1 IntLoc)
(declare-hvar h7_1 IntHeap)
(declare-locvar l11_1 IntLoc)
(declare-hvar h5_1 IntHeap)
(declare-hvar h3_1 IntHeap)
(declare-locvar l9_1 IntLoc)
(declare-hvar H4_1 IntHeap)
(declare-locvar l8_1 IntLoc)
(declare-hvar AH2_1 IntHeap)
(declare-const d2_1 Int)
(declare-hvar H3_1 IntHeap)
(declare-hvar h1_1 IntHeap)
(declare-locvar l6_1 IntLoc)
(declare-hvar H2_1 IntHeap)
(declare-locvar l5_1 IntLoc)
(declare-hvar AH1_1 IntHeap)
(declare-const d1_1 Int)
(declare-hvar H1_1 IntHeap)
(declare-locvar l1_1 IntLoc)
(declare-hvar AH_0 IntHeap)
(declare-locvar l3_1 IntLoc)
(declare-locvar l4_1 IntLoc)
(declare-locvar l2_1 IntLoc)
(declare-hvar H_0 IntHeap)
(declare-const loc_0 Int)
(assert
 (let (($x933 (= loc_2 3)))
 (let (($x1036 (= invalidFree_2 invalidFree_1)))
 (let (($x945 (= H_2 H_1)))
 (let (($x946 (and (and true (= AH_2 AH_1)) $x945)))
 (let (($x925 (= $r_main0_2 $r_main0_1)))
 (let (($x926 (and (and true (= $i10_main0_2 $i10_main0_1)) $x925)))
 (let (($x918 (= $p9_main0_2 $p9_main0_1)))
 (let (($x915 (= $p8_main0_2 $p8_main0_1)))
 (let (($x912 (= $p7_main0_2 $p7_main0_1)))
 (let (($x909 (= $p6_main0_2 $p6_main0_1)))
 (let (($x906 (= $p5_main0_2 $p5_main0_1)))
 (let (($x903 (= $p4_main0_2 $p4_main0_1)))
 (let (($x900 (= $p3_main0_2 $p3_main0_1)))
 (let (($x897 (= $p2_main0_2 $p2_main0_1)))
 (let (($x894 (= $p1_main0_2 $p1_main0_1)))
 (let (($x891 (= $p13_main0_2 $p13_main0_1)))
 (let (($x888 (= $p12_main0_2 $p12_main0_1)))
 (let (($x885 (= $p11_main0_2 $p11_main0_1)))
 (let (($x892 (and (and (and (and true (= $p0_main0_2 $p0_main0_1)) $x885) $x888) $x891)))
 (let (($x910 (and (and (and (and (and (and $x892 $x894) $x897) $x900) $x903) $x906) $x909)))
 (let (($x919 (and (and (and $x910 $x912) $x915) $x918)))
 (let (($x1034 (and (and (and (or true invalidFree_1) (and true true)) $x919) $x926)))
 (let (($x785 (= loc_1 2)))
 (let (($x937 (and $x785 (not (= $i10_main0_1 1)))))
 (let (($x1024 (= invalidFree_2 invalidFree2_2)))
 (let (($x877 (= H_2 H7_2)))
 (let (($x875 (= AH_2 AH5_2)))
 (let (($x878 (and $x875 $x877)))
 (let (($x998 (= invalidFree2_2 invalidFree1_2)))
 (let (($x999 (and invalidFree1_2 $x998)))
 (let (($x811 (= H7_2 h10_2)))
 (let (($x812 (= $p9_main0_1 l24_2)))
 (let (($x816 (= H6_2 (uplus h10_2 (pt l24_2 (Pt_R_1 d7_2))))))
 (let (($x819 (= d6_2 1)))
 (let (($x821 (= $p9_main0_1 l20_2)))
 (let ((?x827 (uplus h10_2 (uplus (pt l20_2 (Pt_R_0 l21_2)) (pt l22_2 (Pt_R_0 l23_2))))))
 (let (($x828 (= H6_2 ?x827)))
 (let (($x831 (= d6_2 2)))
 (let (($x833 (and (=> $x831 (and (and $x828 $x821) $x811)) (=> $x819 (and (and $x816 $x812) $x811)))))
 (let (($x834 (= AH5_2 ah3)))
 (let (($x838 (= AH4_2 (uplus ah3 (pt $p9_main0_1 (Pt_R_1 d6_2))))))
 (let (($x840 (and (and $x838 $x834) $x833)))
 (let (($x1006 (or (= $p9_main0_1 nil) (= ah4_2 (uplus AH4_2 (pt $p9_main0_1 (Pt_R_1 d8_2)))))))
 (let (($x1007 (and $x1006 invalidFree2_2)))
 (let (($x1010 (= invalidFree1_2 invalidFree_1)))
 (let (($x1011 (and invalidFree_1 $x1010)))
 (let (($x842 (= H6_2 h9_2)))
 (let (($x843 (= $p7_main0_1 l19_2)))
 (let (($x847 (= H_1 (uplus h9_2 (pt l19_2 (Pt_R_1 d4_2))))))
 (let (($x850 (= d3_2 1)))
 (let (($x852 (= $p7_main0_1 l15_2)))
 (let ((?x858 (uplus h9_2 (uplus (pt l15_2 (Pt_R_0 l16_2)) (pt l17_2 (Pt_R_0 l18_2))))))
 (let (($x859 (= H_1 ?x858)))
 (let (($x862 (= d3_2 2)))
 (let (($x864 (and (=> $x862 (and (and $x859 $x852) $x842)) (=> $x850 (and (and $x847 $x843) $x842)))))
 (let (($x865 (= AH4_2 ah1)))
 (let (($x869 (= AH_1 (uplus ah1 (pt $p7_main0_1 (Pt_R_1 d3_2))))))
 (let (($x871 (and (and $x869 $x865) $x864)))
 (let (($x1018 (or (= $p7_main0_1 nil) (= ah2_2 (uplus AH_1 (pt $p7_main0_1 (Pt_R_1 d5_2)))))))
 (let (($x1019 (and $x1018 invalidFree1_2)))
 (let (($x1022 (and (or (or $x1019 (and $x871 $x1010)) $x1011) (or (or $x1007 (and $x840 $x998)) $x999))))
 (let (($x809 (= $i10_main0_1 1)))
 (let (($x810 (and $x785 $x809)))
 (let (($x1030 (=> $x810 (and (and (and (and $x1022 (and $x878 $x1024)) $x919) $x926) $x933))))
 (let (($x987 (= invalidFree_1 invalidFree_0)))
 (let (($x781 (= $r_main0_1 $r_main0_0)))
 (let (($x782 (and true $x781)))
 (let (($x776 (= $p13_main0_1 $p13_main0_0)))
 (let (($x772 (= $p12_main0_1 $p12_main0_0)))
 (let (($x777 (and (and (and true (= $p11_main0_1 $p11_main0_0)) $x772) $x776)))
 (let (($x760 (= H_1 H5_1)))
 (let (($x757 (= AH_1 AH3_1)))
 (let (($x754 (= $p9_main0_1 $p9_main01_1)))
 (let (($x751 (= $p8_main0_1 $p8_main01_1)))
 (let (($x748 (= $p7_main0_1 $p7_main01_1)))
 (let (($x745 (= $p6_main0_1 $p6_main01_1)))
 (let (($x742 (= $p5_main0_1 $p5_main01_1)))
 (let (($x739 (= $p4_main0_1 $p4_main01_1)))
 (let (($x736 (= $p3_main0_1 $p3_main01_1)))
 (let (($x733 (= $p2_main0_1 $p2_main01_1)))
 (let (($x730 (= $p1_main0_1 $p1_main01_1)))
 (let (($x731 (and (and (= $i10_main0_1 $i10_main01_1) (= $p0_main0_1 $p0_main01_1)) $x730)))
 (let (($x749 (and (and (and (and (and (and $x731 $x733) $x736) $x739) $x742) $x745) $x748)))
 (let (($x761 (and (and (and (and $x749 $x751) $x754) $x757) $x760)))
 (let (($x982 (and $x761 true)))
 (let (($x579 (and (not (= $p7_main01_1 $p9_main01_1)) (= $i10_main01_1 0))))
 (let (($x577 (= $p7_main01_1 $p9_main01_1)))
 (let (($x581 (and $x577 (= $i10_main01_1 1))))
 (let (($x582 (or $x581 $x579)))
 (let (($x591 (and (= H5_1 (uplus h7_1 (pt $p8_main01_1 (Pt_R_0 l13_1)))) (= $p9_main01_1 l13_1))))
 (let (($x958 (or $x591 invalidFree_0)))
 (let ((?x602 (locadd $p1_main01_1 1)))
 (let (($x603 (= $p8_main01_1 ?x602)))
 (let (($x959 (or $x603 invalidFree_0)))
 (let (($x612 (and (= H5_1 (uplus h5_1 (pt $p6_main01_1 (Pt_R_0 l11_1)))) (= $p7_main01_1 l11_1))))
 (let (($x960 (or $x612 invalidFree_0)))
 (let (($x623 (= $p6_main01_1 $p1_main01_1)))
 (let (($x961 (or $x623 invalidFree_0)))
 (let (($x635 (and (= H4_1 (uplus h3_1 (pt $p5_main01_1 (Pt_R_0 l9_1)))) (= H5_1 (uplus h3_1 (pt $p5_main01_1 (Pt_R_0 $p4_main01_1)))))))
 (let (($x962 (or $x635 invalidFree_0)))
 (let (($x646 (= $p5_main01_1 ?x602)))
 (let (($x963 (or $x646 invalidFree_0)))
 (let (($x650 (= AH3_1 (uplus AH2_1 (pt l8_1 (Pt_R_1 1))))))
 (let (($x651 (= $p4_main01_1 l8_1)))
 (let (($x655 (= H4_1 (uplus H3_1 (pt l8_1 (Pt_R_1 d2_1))))))
 (let (($x657 (and (and $x655 $x651) $x650)))
 (let (($x669 (and (= H2_1 (uplus h1_1 (pt $p3_main01_1 (Pt_R_0 l6_1)))) (= H3_1 (uplus h1_1 (pt $p3_main01_1 (Pt_R_0 $p2_main01_1)))))))
 (let (($x965 (or $x669 invalidFree_0)))
 (let (($x680 (= $p3_main01_1 $p1_main01_1)))
 (let (($x966 (or $x680 invalidFree_0)))
 (let (($x684 (= AH2_1 (uplus AH1_1 (pt l5_1 (Pt_R_1 1))))))
 (let (($x685 (= $p2_main01_1 l5_1)))
 (let (($x689 (= H2_1 (uplus H1_1 (pt l5_1 (Pt_R_1 d1_1))))))
 (let (($x691 (and (and $x689 $x685) $x684)))
 (let (($x693 (= $p1_main01_1 $p0_main01_1)))
 (let (($x968 (or $x693 invalidFree_0)))
 (let (($x697 (= AH1_1 (uplus AH_0 (pt l1_1 (Pt_R_1 2))))))
 (let (($x698 (= $p0_main01_1 l1_1)))
 (let (($x700 (= l3_1 (locadd l1_1 1))))
 (let ((?x706 (uplus H_0 (uplus (pt l1_1 (Pt_R_0 l2_1)) (pt l3_1 (Pt_R_0 l4_1))))))
 (let (($x707 (= H1_1 ?x706)))
 (let (($x710 (and (and (and $x707 $x700) $x698) $x697)))
 (let (($x972 (and (and (and (or $x710 invalidFree_0) $x968) (or $x691 invalidFree_0)) $x966)))
 (let (($x977 (and (and (and (and (and $x972 $x965) (or $x657 invalidFree_0)) $x963) $x962) $x961)))
 (let (($x983 (and (and (and (and (and $x977 $x960) $x959) $x958) (or $x582 invalidFree_0)) $x982)))
 (let (($x525 (= loc_0 1)))
 (let (($x955 (not invalidFree_0)))
 (let (($x527 (and (and (= H_0 emp) (= AH_0 emp)) $x525)))
 (let (($x991 (and (and $x527 $x955) (=> $x525 (and (and (and (and $x983 $x777) $x782) $x987) $x785)))))
 (let (($x1041 (and $x991 (and $x1030 (=> $x937 (and (and (and $x1034 $x946) $x1036) $x933))))))
 (and $x1041 invalidFree_2))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
