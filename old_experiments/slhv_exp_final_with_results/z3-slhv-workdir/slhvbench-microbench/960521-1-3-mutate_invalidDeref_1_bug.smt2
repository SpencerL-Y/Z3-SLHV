(set-logic SLHV)
(declare-hvar emp IntHeap)
(declare-locvar nil IntLoc)
(declare-datatype pt_record_0 ((Pt_R_0 (loc IntLoc))))
(declare-datatype pt_record_1 ((Pt_R_1 (data Int))))
(declare-const invalidDeref_1 Bool)
(declare-const loc_1 Int)
(declare-const $r_main0_0 Int)
(declare-const $r_main0_1 Int)
(declare-locvar $p25_main0_0 IntLoc)
(declare-locvar $p25_main0_1 IntLoc)
(declare-locvar $p24_main0_0 IntLoc)
(declare-locvar $p24_main0_1 IntLoc)
(declare-locvar $p23_main0_0 IntLoc)
(declare-locvar $p23_main0_1 IntLoc)
(declare-locvar $p22_main0_0 IntLoc)
(declare-locvar $p22_main0_1 IntLoc)
(declare-locvar $p21_main0_0 IntLoc)
(declare-locvar $p21_main0_1 IntLoc)
(declare-locvar $p20_main0_0 IntLoc)
(declare-locvar $p20_main0_1 IntLoc)
(declare-locvar $p19_main0_0 IntLoc)
(declare-locvar $p19_main0_1 IntLoc)
(declare-locvar $p18_main0_0 IntLoc)
(declare-locvar $p18_main0_1 IntLoc)
(declare-locvar $p17_main0_0 IntLoc)
(declare-locvar $p17_main0_1 IntLoc)
(declare-locvar $p16_main0_0 IntLoc)
(declare-locvar $p16_main0_1 IntLoc)
(declare-const invalidDeref2_1 Bool)
(declare-hvar H3_1 IntHeap)
(declare-hvar H_1 IntHeap)
(declare-hvar AH2_1 IntHeap)
(declare-hvar AH_1 IntHeap)
(declare-locvar $p9_main01_1 IntLoc)
(declare-locvar $p9_main0_1 IntLoc)
(declare-locvar $p8_main01_1 IntLoc)
(declare-locvar $p8_main0_1 IntLoc)
(declare-locvar $p4_main01_1 IntLoc)
(declare-locvar $p4_main0_1 IntLoc)
(declare-locvar $p3_main01_1 IntLoc)
(declare-locvar $p3_main0_1 IntLoc)
(declare-locvar $p13_main01_1 IntLoc)
(declare-locvar $p13_main0_1 IntLoc)
(declare-locvar $p12_main01_1 IntLoc)
(declare-locvar $p12_main0_1 IntLoc)
(declare-locvar $p11_main01_1 IntLoc)
(declare-locvar $p11_main0_1 IntLoc)
(declare-locvar $p10_main01_1 IntLoc)
(declare-locvar $p10_main0_1 IntLoc)
(declare-const $i7_main01_1 Int)
(declare-const $i7_main0_1 Int)
(declare-const $i6_main01_1 Int)
(declare-const $i6_main0_1 Int)
(declare-const $i5_main01_1 Int)
(declare-const $i5_main0_1 Int)
(declare-const $i2_main01_1 Int)
(declare-const $i2_main0_1 Int)
(declare-const $i1_main01_1 Int)
(declare-const $i1_main0_1 Int)
(declare-const $i15_main01_1 Int)
(declare-const $i15_main0_1 Int)
(declare-const $i14_main01_1 Int)
(declare-const $i14_main0_1 Int)
(declare-const $i0_main01_1 Int)
(declare-const $i0_main0_1 Int)
(declare-locvar $M.23_1 IntLoc)
(declare-locvar $M.2_1 IntLoc)
(declare-locvar $M.12_1 IntLoc)
(declare-locvar $M.1_1 IntLoc)
(declare-const $M.02_1 Int)
(declare-const $M.0_1 Int)
(declare-const invalidDeref1_1 Bool)
(declare-const d9_1 Int)
(declare-hvar h3_1 IntHeap)
(declare-const d10_1 Int)
(declare-hvar h4_1 IntHeap)
(declare-const invalidDeref_0 Bool)
(declare-hvar h1_1 IntHeap)
(declare-const d7_1 Int)
(declare-hvar H2_1 IntHeap)
(declare-const d8_1 Int)
(declare-hvar h2 IntHeap)
(declare-locvar $M.22_1 IntLoc)
(declare-locvar l4_1 IntLoc)
(declare-hvar AH1_1 IntHeap)
(declare-locvar l5_1 IntLoc)
(declare-locvar l6_1 IntLoc)
(declare-const d6_1 Int)
(declare-const d5_1 Int)
(declare-const d4_1 Int)
(declare-hvar H1_1 IntHeap)
(declare-locvar l1_1 IntLoc)
(declare-hvar AH_0 IntHeap)
(declare-locvar l2_1 IntLoc)
(declare-locvar l3_1 IntLoc)
(declare-const d3_1 Int)
(declare-const d2_1 Int)
(declare-const d1_1 Int)
(declare-hvar H_0 IntHeap)
(declare-locvar $M.21_1 IntLoc)
(declare-locvar $M.11_1 IntLoc)
(declare-const $M.01_1 Int)
(declare-const loc_0 Int)
(assert
 (let (($x961 (= loc_1 2)))
 (let (($x957 (= $r_main0_1 $r_main0_0)))
 (let (($x958 (and true $x957)))
 (let (($x952 (= $p25_main0_1 $p25_main0_0)))
 (let (($x948 (= $p24_main0_1 $p24_main0_0)))
 (let (($x944 (= $p23_main0_1 $p23_main0_0)))
 (let (($x940 (= $p22_main0_1 $p22_main0_0)))
 (let (($x936 (= $p21_main0_1 $p21_main0_0)))
 (let (($x932 (= $p20_main0_1 $p20_main0_0)))
 (let (($x928 (= $p19_main0_1 $p19_main0_0)))
 (let (($x924 (= $p18_main0_1 $p18_main0_0)))
 (let (($x920 (= $p17_main0_1 $p17_main0_0)))
 (let (($x929 (and (and (and (and true (= $p16_main0_1 $p16_main0_0)) $x920) $x924) $x928)))
 (let (($x953 (and (and (and (and (and (and $x929 $x932) $x936) $x940) $x944) $x948) $x952)))
 (let (($x911 (= invalidDeref_1 invalidDeref2_1)))
 (let (($x908 (= H_1 H3_1)))
 (let (($x905 (= AH_1 AH2_1)))
 (let (($x902 (= $p9_main0_1 $p9_main01_1)))
 (let (($x899 (= $p8_main0_1 $p8_main01_1)))
 (let (($x896 (= $p4_main0_1 $p4_main01_1)))
 (let (($x893 (= $p3_main0_1 $p3_main01_1)))
 (let (($x890 (= $p13_main0_1 $p13_main01_1)))
 (let (($x887 (= $p12_main0_1 $p12_main01_1)))
 (let (($x884 (= $p11_main0_1 $p11_main01_1)))
 (let (($x881 (= $p10_main0_1 $p10_main01_1)))
 (let (($x878 (= $i7_main0_1 $i7_main01_1)))
 (let (($x875 (= $i6_main0_1 $i6_main01_1)))
 (let (($x872 (= $i5_main0_1 $i5_main01_1)))
 (let (($x869 (= $i2_main0_1 $i2_main01_1)))
 (let (($x866 (= $i1_main0_1 $i1_main01_1)))
 (let (($x863 (= $i15_main0_1 $i15_main01_1)))
 (let (($x860 (= $i14_main0_1 $i14_main01_1)))
 (let (($x857 (= $i0_main0_1 $i0_main01_1)))
 (let (($x854 (= $M.2_1 $M.23_1)))
 (let (($x858 (and (and (and (= $M.0_1 $M.02_1) (= $M.1_1 $M.12_1)) $x854) $x857)))
 (let (($x876 (and (and (and (and (and (and $x858 $x860) $x863) $x866) $x869) $x872) $x875)))
 (let (($x894 (and (and (and (and (and (and $x876 $x878) $x881) $x884) $x887) $x890) $x893)))
 (let (($x909 (and (and (and (and (and $x894 $x896) $x899) $x902) $x905) $x908)))
 (let (($x699 (or (and (and (distinct $i14_main01_1 0) true) (= $i15_main01_1 1)) (and (not (and (distinct $i14_main01_1 0) true)) (= $i15_main01_1 0)))))
 (let (($x701 (= invalidDeref2_1 invalidDeref1_1)))
 (let (($x702 (and invalidDeref1_1 $x701)))
 (let (($x703 (= $i14_main01_1 d9_1)))
 (let (($x707 (= H3_1 (uplus h3_1 (pt $p13_main01_1 (Pt_R_1 d9_1))))))
 (let (($x708 (and $x707 $x703)))
 (let (($x710 (= $p13_main01_1 nil)))
 (let (($x714 (= h4_1 (uplus H3_1 (pt $p13_main01_1 (Pt_R_1 d10_1))))))
 (let (($x724 (= invalidDeref1_1 invalidDeref_0)))
 (let (($x725 (and invalidDeref_0 $x724)))
 (let (($x728 (= H3_1 (uplus h1_1 (pt $p10_main01_1 (Pt_R_1 0))))))
 (let (($x732 (= H2_1 (uplus h1_1 (pt $p10_main01_1 (Pt_R_1 d7_1))))))
 (let (($x733 (and $x732 $x728)))
 (let (($x735 (= $p10_main01_1 nil)))
 (let (($x739 (= h2 (uplus H2_1 (pt $p10_main01_1 (Pt_R_1 d8_1))))))
 (let (($x757 (= AH2_1 (uplus AH1_1 (pt l4_1 (Pt_R_1 3))))))
 (let (($x758 (= $p8_main01_1 l4_1)))
 (let (($x760 (= l6_1 (locadd l5_1 1))))
 (let (($x762 (= l5_1 (locadd l4_1 1))))
 (let ((?x771 (uplus (uplus (pt l4_1 (Pt_R_1 d4_1)) (pt l5_1 (Pt_R_1 d5_1))) (pt l6_1 (Pt_R_1 d6_1)))))
 (let (($x773 (= H2_1 (uplus H1_1 ?x771))))
 (let (($x776 (and (and (and $x773 (and $x762 $x760)) $x758) $x757)))
 (let (($x790 (= AH1_1 (uplus AH_0 (pt l1_1 (Pt_R_1 2))))))
 (let (($x791 (= $p3_main01_1 l1_1)))
 (let (($x793 (= l3_1 (locadd l2_1 1))))
 (let (($x795 (= l2_1 (locadd l1_1 1))))
 (let ((?x804 (uplus (uplus (pt l1_1 (Pt_R_1 d1_1)) (pt l2_1 (Pt_R_1 d2_1))) (pt l3_1 (Pt_R_1 d3_1)))))
 (let (($x806 (= H1_1 (uplus H_0 ?x804))))
 (let (($x809 (and (and (and $x806 (and $x795 $x793)) $x791) $x790)))
 (let (($x825 (and (or (= $M.01_1 0) invalidDeref_0) (or (= $M.11_1 nil) invalidDeref_0))))
 (let (($x827 (and (and $x825 (or (= $M.21_1 nil) invalidDeref_0)) (or (= $M.02_1 3) invalidDeref_0))))
 (let (($x829 (and (and $x827 (or (= $i0_main01_1 3) invalidDeref_0)) (or (= $i1_main01_1 3) invalidDeref_0))))
 (let (($x831 (and (and $x829 (or (= $i2_main01_1 12) invalidDeref_0)) (or $x809 invalidDeref_0))))
 (let (($x833 (and (and $x831 (or (= $p4_main01_1 $p3_main01_1) invalidDeref_0)) (or (= $M.12_1 $p3_main01_1) invalidDeref_0))))
 (let (($x835 (and (and $x833 (or (= $i5_main01_1 3) invalidDeref_0)) (or (= $i6_main01_1 3) invalidDeref_0))))
 (let (($x837 (and (and $x835 (or (= $i7_main01_1 12) invalidDeref_0)) (or $x776 invalidDeref_0))))
 (let (($x839 (and (and $x837 (or (= $p9_main01_1 $p8_main01_1) invalidDeref_0)) (or (= $M.22_1 $p8_main01_1) invalidDeref_0))))
 (let (($x841 (and (and $x839 (or (= $p10_main01_1 $M.22_1) invalidDeref_0)) (or (= $p11_main01_1 (locadd $p10_main01_1 1)) invalidDeref_0))))
 (let (($x843 (and (and $x841 (or (= $M.23_1 $p11_main01_1) invalidDeref_0)) (or (or (and (or $x739 $x735) invalidDeref1_1) (and $x733 $x724)) $x725))))
 (let (($x845 (and (and $x843 (or (= $p12_main01_1 $M.23_1) invalidDeref1_1)) (or (= $p13_main01_1 (locadd $p12_main01_1 (- 2))) invalidDeref1_1))))
 (let (($x846 (and $x845 (or (or (and (or $x714 $x710) invalidDeref2_1) (and $x708 $x701)) $x702))))
 (let (($x954 (and (and (and $x846 (or $x699 invalidDeref2_1)) (and $x909 $x911)) $x953)))
 (let (($x638 (= loc_0 1)))
 (let (($x642 (not invalidDeref_0)))
 (let (($x640 (and (and (= H_0 emp) (= AH_0 emp)) $x638)))
 (and (and (and $x640 $x642) (=> $x638 (and (and $x954 $x958) $x961))) invalidDeref_1)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
