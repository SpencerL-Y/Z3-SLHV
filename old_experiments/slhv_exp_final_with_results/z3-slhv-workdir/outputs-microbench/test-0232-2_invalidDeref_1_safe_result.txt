cmd context init manager
mk solver for logic SLHV
mk smt2 solver
constructor size: 1
acc name: loc
acc sort: IntLoc
ptrs range sort: pt_record_0
constructor size: 1
acc name: data
acc sort: Int
ptrs range sort: pt_record_1
XXXXXXXXXXXXXXXXXXXX slhv final_check() XXXXXXXXXXXXXXXXXXXX
================= current outside assertions ==============
(= H_0 emp)
(= AH_0 emp)
(= H1_1 (uplus emp (pt $p0_main01_1 (Pt_R_1 d1_1))))
(= $p0_main01_1 l1_1)
(= AH1_1 (uplus emp (pt $p0_main01_1 (Pt_R_1 1))))
(let ((a!1 (= h2 (uplus H1_1 (pt $p0_main01_1 (Pt_R_0 l3_1))))))
  (or (= $p0_main01_1 nil) a!1))
(= $p0_main0_1 $p0_main01_1)
(= AH_1 AH1_1)
(= H_1 H2_1)
(= $p0_append0_1 $p0_append0_0)
(= $p10_append0_1 $p10_append0_0)
(= $p10_main0_1 $p10_main0_0)
(= $p11_append0_1 $p11_append0_0)
(= $p11_main0_1 $p11_main0_0)
(= $p12_append0_1 $p12_append0_0)
(= $p12_main0_1 $p12_main0_0)
(= $p13_append0_1 $p13_append0_0)
(= $p13_main0_1 $p13_main0_0)
(= $p14_append0_1 $p14_append0_0)
(= $p14_main0_1 $p14_main0_0)
(= $p15_append0_1 $p15_append0_0)
(= $p16_append0_1 $p16_append0_0)
(= $p16_main0_1 $p16_main0_0)
(= $p17_main0_1 $p17_main0_0)
(= $p18_main0_1 $p18_main0_0)
(= $p19_main0_1 $p19_main0_0)
(= $p1_append0_1 $p1_append0_0)
(= $p20_main0_1 $p20_main0_0)
(= $p21_main0_1 $p21_main0_0)
(= $p2_append0_1 $p2_append0_0)
(= $p3_append0_1 $p3_append0_0)
(= $p3_main0_1 $p3_main0_0)
(= $p4_append0_1 $p4_append0_0)
(= $p5_append0_1 $p5_append0_0)
(= $p5_main0_1 $p5_main0_0)
(= $p6_append0_1 $p6_append0_0)
(= $p6_main0_1 $p6_main0_0)
(= $p7_main0_1 $p7_main0_0)
(= $p8_append0_1 $p8_append0_0)
(= $p8_main0_1 $p8_main0_0)
(= $p9_append0_1 $p9_append0_0)
(= $p9_main0_1 $p9_main0_0)
===================== current outside assertions end ==================
================= current refined assignment ==============
(= H_0 emp)
(= AH_0 emp)
(= H1_1 (uplus emp (pt $p0_main01_1 (Pt_R_1 d1_1))))
(= $p0_main01_1 l1_1)
(= AH1_1 (uplus emp (pt $p0_main01_1 (Pt_R_1 1))))
(let ((a!1 (= h2 (uplus H1_1 (pt $p0_main01_1 (Pt_R_0 l3_1))))))
  (or (= $p0_main01_1 nil) a!1))
(= $p0_main0_1 $p0_main01_1)
(= AH_1 AH1_1)
(= H_1 H2_1)
(= $p0_append0_1 $p0_append0_0)
(= $p10_append0_1 $p10_append0_0)
(= $p10_main0_1 $p10_main0_0)
(= $p11_append0_1 $p11_append0_0)
(= $p11_main0_1 $p11_main0_0)
(= $p12_append0_1 $p12_append0_0)
(= $p12_main0_1 $p12_main0_0)
(= $p13_append0_1 $p13_append0_0)
(= $p13_main0_1 $p13_main0_0)
(= $p14_append0_1 $p14_append0_0)
(= $p14_main0_1 $p14_main0_0)
(= $p15_append0_1 $p15_append0_0)
(= $p16_append0_1 $p16_append0_0)
(= $p16_main0_1 $p16_main0_0)
(= $p17_main0_1 $p17_main0_0)
(= $p18_main0_1 $p18_main0_0)
(= $p19_main0_1 $p19_main0_0)
(= $p1_append0_1 $p1_append0_0)
(= $p20_main0_1 $p20_main0_0)
(= $p21_main0_1 $p21_main0_0)
(= $p2_append0_1 $p2_append0_0)
(= $p3_append0_1 $p3_append0_0)
(= $p3_main0_1 $p3_main0_0)
(= $p4_append0_1 $p4_append0_0)
(= $p5_append0_1 $p5_append0_0)
(= $p5_main0_1 $p5_main0_0)
(= $p6_append0_1 $p6_append0_0)
(= $p6_main0_1 $p6_main0_0)
(= $p7_main0_1 $p7_main0_0)
(= $p8_append0_1 $p8_append0_0)
(= $p8_main0_1 $p8_main0_0)
(= $p9_append0_1 $p9_append0_0)
(= $p9_main0_1 $p9_main0_0)
===================== current refined assignment end ==================
slhv disj preprocessing
slhv collect and analyze assignments
collect expr: (= H_0 emp)
collect expr: (= AH_0 emp)
collect expr: (= H1_1 (uplus emp (pt $p0_main01_1 (Pt_R_1 d1_1))))
collect expr: (= $p0_main01_1 l1_1)
collect expr: (= AH1_1 (uplus emp (pt $p0_main01_1 (Pt_R_1 1))))
collect expr: (let ((a!1 (= h2 (uplus H1_1 (pt $p0_main01_1 (Pt_R_0 l3_1))))))
  (or (= $p0_main01_1 nil) a!1))
collect expr: (= $p0_main0_1 $p0_main01_1)
collect expr: (= AH_1 AH1_1)
collect expr: (= H_1 H2_1)
collect expr: (= $p0_append0_1 $p0_append0_0)
collect expr: (= $p10_append0_1 $p10_append0_0)
collect expr: (= $p10_main0_1 $p10_main0_0)
collect expr: (= $p11_append0_1 $p11_append0_0)
collect expr: (= $p11_main0_1 $p11_main0_0)
collect expr: (= $p12_append0_1 $p12_append0_0)
collect expr: (= $p12_main0_1 $p12_main0_0)
collect expr: (= $p13_append0_1 $p13_append0_0)
collect expr: (= $p13_main0_1 $p13_main0_0)
collect expr: (= $p14_append0_1 $p14_append0_0)
collect expr: (= $p14_main0_1 $p14_main0_0)
collect expr: (= $p15_append0_1 $p15_append0_0)
collect expr: (= $p16_append0_1 $p16_append0_0)
collect expr: (= $p16_main0_1 $p16_main0_0)
collect expr: (= $p17_main0_1 $p17_main0_0)
collect expr: (= $p18_main0_1 $p18_main0_0)
collect expr: (= $p19_main0_1 $p19_main0_0)
collect expr: (= $p1_append0_1 $p1_append0_0)
collect expr: (= $p20_main0_1 $p20_main0_0)
collect expr: (= $p21_main0_1 $p21_main0_0)
collect expr: (= $p2_append0_1 $p2_append0_0)
collect expr: (= $p3_append0_1 $p3_append0_0)
collect expr: (= $p3_main0_1 $p3_main0_0)
collect expr: (= $p4_append0_1 $p4_append0_0)
collect expr: (= $p5_append0_1 $p5_append0_0)
collect expr: (= $p5_main0_1 $p5_main0_0)
collect expr: (= $p6_append0_1 $p6_append0_0)
collect expr: (= $p6_main0_1 $p6_main0_0)
collect expr: (= $p7_main0_1 $p7_main0_0)
collect expr: (= $p8_append0_1 $p8_append0_0)
collect expr: (= $p8_main0_1 $p8_main0_0)
collect expr: (= $p9_append0_1 $p9_append0_0)
collect expr: (= $p9_main0_1 $p9_main0_0)
slhv disj preprocessing end
begin extract all hterms disj
extract lhs hterm
extract lhs hterm
extract lhs hterm
extract lhs hterm
extract lhs hterm
extract lhs hterm
extract lhs hterm
all heap constraints: 
(= H_1 H2_1)
(= AH_1 AH1_1)
(= h2 (uplus H1_1 (pt $p0_main01_1 (Pt_R_0 l3_1))))
(= H_0 emp)
(= AH_0 emp)
(= AH1_1 (uplus emp (pt $p0_main01_1 (Pt_R_1 1))))
(= H1_1 (uplus emp (pt $p0_main01_1 (Pt_R_1 d1_1))))
all hterms size: 12
all hterms: 
(pt $p0_main01_1 (Pt_R_0 l3_1))	(pt $p0_main01_1 (Pt_R_1 1))	(pt $p0_main01_1 (Pt_R_1 d1_1))	H_1	H2_1	AH_1	AH1_1	H1_1	h2	AH_0	H_0	emp	
( AH1_1 | )
hterm id:  0  0  0  0  0  0  1  0  0  0  0  0 
( H2_1 | )
hterm id:  0  0  0  0  1  0  0  0  0  0  0  0 
( h2 | )
hterm id:  0  0  0  0  0  0  0  0  1  0  0  0 
( AH_1 | )
hterm id:  0  0  0  0  0  1  0  0  0  0  0  0 
( emp | )
hterm id:  0  0  0  0  0  0  0  0  0  0  0  1 
( H_0 | )
hterm id:  0  0  0  0  0  0  0  0  0  0  1  0 
( AH_0 | )
hterm id:  0  0  0  0  0  0  0  0  0  1  0  0 
( H_1 | )
hterm id:  0  0  0  1  0  0  0  0  0  0  0  0 
( H1_1 | )
hterm id:  0  0  0  0  0  0  0  1  0  0  0  0 
( (pt $p0_main01_1 (Pt_R_1 1)) | emp | )
hterm id:  0  1  0  0  0  0  0  0  0  0  0  1 
( (pt $p0_main01_1 (Pt_R_0 l3_1)) | H1_1 | )
hterm id:  1  0  0  0  0  0  0  1  0  0  0  0 
( (pt $p0_main01_1 (Pt_R_1 d1_1)) | emp | )
hterm id:  0  0  1  0  0  0  0  0  0  0  0  1 
( (pt $p0_main01_1 (Pt_R_0 l3_1)) | )
hterm id:  1  0  0  0  0  0  0  0  0  0  0  0 
( (pt $p0_main01_1 (Pt_R_1 d1_1)) | )
hterm id:  0  0  1  0  0  0  0  0  0  0  0  0 
( (pt $p0_main01_1 (Pt_R_1 1)) | )
hterm id:  0  1  0  0  0  0  0  0  0  0  0  0 
encode for disj
generate_init_ld_locvar_constraint_for_all_assertions
generate_init_ld_locvar_constraint_recursive (= H_0 emp)
generate_init_ld_locvar_constraint_for_hteq (= H_0 emp)
generate_init_ld_locvar_constraint_recursive (= AH_0 emp)
generate_init_ld_locvar_constraint_for_hteq (= AH_0 emp)
generate_init_ld_locvar_constraint_recursive (= H1_1 (uplus emp (pt $p0_main01_1 (Pt_R_1 d1_1))))
generate_init_ld_locvar_constraint_for_hteq (= H1_1 (uplus emp (pt $p0_main01_1 (Pt_R_1 d1_1))))
generate_init_ld_locvar_constraint_recursive (= $p0_main01_1 l1_1)
generate_init_ld_locvar_constraint_recursive (= AH1_1 (uplus emp (pt $p0_main01_1 (Pt_R_1 1))))
generate_init_ld_locvar_constraint_for_hteq (= AH1_1 (uplus emp (pt $p0_main01_1 (Pt_R_1 1))))
generate_init_ld_locvar_constraint_recursive (let ((a!1 (= h2 (uplus H1_1 (pt $p0_main01_1 (Pt_R_0 l3_1))))))
  (or (= $p0_main01_1 nil) a!1))
generate_init_ld_locvar_constraint_recursive (= $p0_main01_1 nil)
generate_init_ld_locvar_constraint_recursive (= h2 (uplus H1_1 (pt $p0_main01_1 (Pt_R_0 l3_1))))
generate_init_ld_locvar_constraint_for_hteq (= h2 (uplus H1_1 (pt $p0_main01_1 (Pt_R_0 l3_1))))
generate_init_ld_locvar_constraint_recursive (= $p0_main0_1 $p0_main01_1)
generate_init_ld_locvar_constraint_recursive (= AH_1 AH1_1)
generate_init_ld_locvar_constraint_for_hteq (= AH_1 AH1_1)
generate_init_ld_locvar_constraint_recursive (= H_1 H2_1)
generate_init_ld_locvar_constraint_for_hteq (= H_1 H2_1)
generate_init_ld_locvar_constraint_recursive (= $p0_append0_1 $p0_append0_0)
generate_init_ld_locvar_constraint_recursive (= $p10_append0_1 $p10_append0_0)
generate_init_ld_locvar_constraint_recursive (= $p10_main0_1 $p10_main0_0)
generate_init_ld_locvar_constraint_recursive (= $p11_append0_1 $p11_append0_0)
generate_init_ld_locvar_constraint_recursive (= $p11_main0_1 $p11_main0_0)
generate_init_ld_locvar_constraint_recursive (= $p12_append0_1 $p12_append0_0)
generate_init_ld_locvar_constraint_recursive (= $p12_main0_1 $p12_main0_0)
generate_init_ld_locvar_constraint_recursive (= $p13_append0_1 $p13_append0_0)
generate_init_ld_locvar_constraint_recursive (= $p13_main0_1 $p13_main0_0)
generate_init_ld_locvar_constraint_recursive (= $p14_append0_1 $p14_append0_0)
generate_init_ld_locvar_constraint_recursive (= $p14_main0_1 $p14_main0_0)
generate_init_ld_locvar_constraint_recursive (= $p15_append0_1 $p15_append0_0)
generate_init_ld_locvar_constraint_recursive (= $p16_append0_1 $p16_append0_0)
generate_init_ld_locvar_constraint_recursive (= $p16_main0_1 $p16_main0_0)
generate_init_ld_locvar_constraint_recursive (= $p17_main0_1 $p17_main0_0)
generate_init_ld_locvar_constraint_recursive (= $p18_main0_1 $p18_main0_0)
generate_init_ld_locvar_constraint_recursive (= $p19_main0_1 $p19_main0_0)
generate_init_ld_locvar_constraint_recursive (= $p1_append0_1 $p1_append0_0)
generate_init_ld_locvar_constraint_recursive (= $p20_main0_1 $p20_main0_0)
generate_init_ld_locvar_constraint_recursive (= $p21_main0_1 $p21_main0_0)
generate_init_ld_locvar_constraint_recursive (= $p2_append0_1 $p2_append0_0)
generate_init_ld_locvar_constraint_recursive (= $p3_append0_1 $p3_append0_0)
generate_init_ld_locvar_constraint_recursive (= $p3_main0_1 $p3_main0_0)
generate_init_ld_locvar_constraint_recursive (= $p4_append0_1 $p4_append0_0)
generate_init_ld_locvar_constraint_recursive (= $p5_append0_1 $p5_append0_0)
generate_init_ld_locvar_constraint_recursive (= $p5_main0_1 $p5_main0_0)
generate_init_ld_locvar_constraint_recursive (= $p6_append0_1 $p6_append0_0)
generate_init_ld_locvar_constraint_recursive (= $p6_main0_1 $p6_main0_0)
generate_init_ld_locvar_constraint_recursive (= $p7_main0_1 $p7_main0_0)
generate_init_ld_locvar_constraint_recursive (= $p8_append0_1 $p8_append0_0)
generate_init_ld_locvar_constraint_recursive (= $p8_main0_1 $p8_main0_0)
generate_init_ld_locvar_constraint_recursive (= $p9_append0_1 $p9_append0_0)
generate_init_ld_locvar_constraint_recursive (= $p9_main0_1 $p9_main0_0)
generate_init_ld_locvar_constraint_for_all_assertions end
generate_pto_assumptions
generate pto formula disj
generate_iso_assumptions
generate iso formula disj
generate_idj_assumptions
generate idj formula disj
generate_final_assumptions
generate final assumptions disj
encode for disj end
assertion size: 5893
XXXXXXXXXXXXXXXXX translated constraint result XXXXXXXXXXXXXXXXXXX
XXXXXXXXXXXXXXXXXXXX FINAL CHECK SET UNSAT XXXXXXXXXXXXXXXXXXXX
unsat
Time Consumed: 0.12569379806518555s