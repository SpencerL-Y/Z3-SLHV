(set-logic SLHV)
(declare-hvar emp IntHeap)
(declare-locvar nil IntLoc)
(declare-datatype pt_record_0 ((Pt_R_0 (loc IntLoc))))
(declare-datatype pt_record_1 ((Pt_R_1 (data Int))))
(declare-const d32 Int)
(declare-locvar l27 IntLoc)
(declare-hvar ah15 IntHeap)
(declare-hvar AH_1 IntHeap)
(declare-const d31 Int)
(declare-locvar l25 IntLoc)
(declare-hvar h16 IntHeap)
(declare-hvar H_1 IntHeap)
(declare-locvar l26 IntLoc)
(declare-const loc_1 Int)
(declare-const $r_main0_0 Int)
(declare-const $r_main0_1 Int)
(declare-const $i8_main0_0 Int)
(declare-const $i8_main0_1 Int)
(declare-const $i2_main0_0 Int)
(declare-const $i2_main0_1 Int)
(declare-const $i22_main0_0 Int)
(declare-const $i22_main0_1 Int)
(declare-const $i10_main0_0 Int)
(declare-const $i10_main0_1 Int)
(declare-locvar $p9_main0_0 IntLoc)
(declare-locvar $p9_main0_1 IntLoc)
(declare-locvar $p7_main0_0 IntLoc)
(declare-locvar $p7_main0_1 IntLoc)
(declare-locvar $p6_main0_0 IntLoc)
(declare-locvar $p6_main0_1 IntLoc)
(declare-locvar $p5_main0_0 IntLoc)
(declare-locvar $p5_main0_1 IntLoc)
(declare-locvar $p4_main0_0 IntLoc)
(declare-locvar $p4_main0_1 IntLoc)
(declare-locvar $p3_main0_0 IntLoc)
(declare-locvar $p3_main0_1 IntLoc)
(declare-locvar $p27_main0_0 IntLoc)
(declare-locvar $p27_main0_1 IntLoc)
(declare-locvar $p26_main0_0 IntLoc)
(declare-locvar $p26_main0_1 IntLoc)
(declare-locvar $p25_main0_0 IntLoc)
(declare-locvar $p25_main0_1 IntLoc)
(declare-locvar $p24_main0_0 IntLoc)
(declare-locvar $p24_main0_1 IntLoc)
(declare-locvar $p23_main0_0 IntLoc)
(declare-locvar $p23_main0_1 IntLoc)
(declare-locvar $p21_main0_0 IntLoc)
(declare-locvar $p21_main0_1 IntLoc)
(declare-locvar $p20_main0_0 IntLoc)
(declare-locvar $p20_main0_1 IntLoc)
(declare-locvar $p19_main0_0 IntLoc)
(declare-locvar $p19_main0_1 IntLoc)
(declare-locvar $p18_main0_0 IntLoc)
(declare-locvar $p18_main0_1 IntLoc)
(declare-locvar $p17_main0_0 IntLoc)
(declare-locvar $p17_main0_1 IntLoc)
(declare-locvar $p16_main0_0 IntLoc)
(declare-locvar $p16_main0_1 IntLoc)
(declare-locvar $p15_main0_0 IntLoc)
(declare-locvar $p15_main0_1 IntLoc)
(declare-locvar $p14_main0_0 IntLoc)
(declare-locvar $p14_main0_1 IntLoc)
(declare-locvar $p13_main0_0 IntLoc)
(declare-locvar $p13_main0_1 IntLoc)
(declare-locvar $p12_main0_0 IntLoc)
(declare-locvar $p12_main0_1 IntLoc)
(declare-locvar $p11_main0_0 IntLoc)
(declare-locvar $p11_main0_1 IntLoc)
(declare-hvar H1_1 IntHeap)
(declare-hvar AH1_1 IntHeap)
(declare-locvar $p1_main01_1 IntLoc)
(declare-locvar $p1_main0_1 IntLoc)
(declare-locvar $p0_main01_1 IntLoc)
(declare-locvar $p0_main0_1 IntLoc)
(declare-locvar $M.02_1 IntLoc)
(declare-locvar $M.0_1 IntLoc)
(declare-locvar l1_1 IntLoc)
(declare-hvar AH_0 IntHeap)
(declare-const d1_1 Int)
(declare-hvar H_0 IntHeap)
(declare-locvar $M.01_1 IntLoc)
(declare-const loc_0 Int)
(assert
 (let (($x957 (or (= H_1 (uplus h16 (pt l25 (Pt_R_0 l26)))) (= H_1 (uplus h16 (pt l25 (Pt_R_1 d31)))))))
 (let (($x966 (and (and false $x957) (= AH_1 (uplus ah15 (pt l27 (Pt_R_1 d32)))))))
 (let (($x911 (= loc_1 2)))
 (let (($x904 (= $r_main0_1 $r_main0_0)))
 (let (($x900 (= $i8_main0_1 $i8_main0_0)))
 (let (($x896 (= $i2_main0_1 $i2_main0_0)))
 (let (($x892 (= $i22_main0_1 $i22_main0_0)))
 (let (($x901 (and (and (and (and true (= $i10_main0_1 $i10_main0_0)) $x892) $x896) $x900)))
 (let (($x905 (and $x901 $x904)))
 (let (($x883 (= $p9_main0_1 $p9_main0_0)))
 (let (($x879 (= $p7_main0_1 $p7_main0_0)))
 (let (($x875 (= $p6_main0_1 $p6_main0_0)))
 (let (($x871 (= $p5_main0_1 $p5_main0_0)))
 (let (($x867 (= $p4_main0_1 $p4_main0_0)))
 (let (($x863 (= $p3_main0_1 $p3_main0_0)))
 (let (($x859 (= $p27_main0_1 $p27_main0_0)))
 (let (($x855 (= $p26_main0_1 $p26_main0_0)))
 (let (($x851 (= $p25_main0_1 $p25_main0_0)))
 (let (($x847 (= $p24_main0_1 $p24_main0_0)))
 (let (($x843 (= $p23_main0_1 $p23_main0_0)))
 (let (($x839 (= $p21_main0_1 $p21_main0_0)))
 (let (($x835 (= $p20_main0_1 $p20_main0_0)))
 (let (($x831 (= $p19_main0_1 $p19_main0_0)))
 (let (($x827 (= $p18_main0_1 $p18_main0_0)))
 (let (($x823 (= $p17_main0_1 $p17_main0_0)))
 (let (($x819 (= $p16_main0_1 $p16_main0_0)))
 (let (($x815 (= $p15_main0_1 $p15_main0_0)))
 (let (($x811 (= $p14_main0_1 $p14_main0_0)))
 (let (($x807 (= $p13_main0_1 $p13_main0_0)))
 (let (($x803 (= $p12_main0_1 $p12_main0_0)))
 (let (($x812 (and (and (and (and true (= $p11_main0_1 $p11_main0_0)) $x803) $x807) $x811)))
 (let (($x836 (and (and (and (and (and (and $x812 $x815) $x819) $x823) $x827) $x831) $x835)))
 (let (($x860 (and (and (and (and (and (and $x836 $x839) $x843) $x847) $x851) $x855) $x859)))
 (let (($x884 (and (and (and (and (and (and $x860 $x863) $x867) $x871) $x875) $x879) $x883)))
 (let (($x793 (= H_1 H1_1)))
 (let (($x790 (= AH_1 AH1_1)))
 (let (($x787 (= $p1_main0_1 $p1_main01_1)))
 (let (($x788 (and (and (= $M.0_1 $M.02_1) (= $p0_main0_1 $p0_main01_1)) $x787)))
 (let (($x795 (and (and (and $x788 $x790) $x793) true)))
 (let (($x761 (= $M.02_1 $p0_main01_1)))
 (let (($x763 (= $p1_main01_1 $p0_main01_1)))
 (let (($x767 (= AH1_1 (uplus AH_0 (pt l1_1 (Pt_R_1 1))))))
 (let (($x768 (= $p0_main01_1 l1_1)))
 (let (($x772 (= H1_1 (uplus H_0 (pt l1_1 (Pt_R_1 d1_1))))))
 (let (($x774 (and (and $x772 $x768) $x767)))
 (let (($x776 (= $M.01_1 nil)))
 (let (($x941 (and (and (and (and (and (and $x776 $x774) $x763) $x761) $x795) $x884) $x905)))
 (let (($x747 (= loc_0 1)))
 (let (($x749 (and (and (= H_0 emp) (= AH_0 emp)) $x747)))
 (and (and $x749 (=> $x747 (and $x941 $x911))) $x966)))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
