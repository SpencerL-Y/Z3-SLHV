(set-logic SLHV)
(declare-hvar emp IntHeap)
(declare-locvar nil IntLoc)
(declare-datatype pt_record_0 ((Pt_R_0 (loc IntLoc))))
(declare-datatype pt_record_1 ((Pt_R_1 (data Int))))
(declare-const invalidDeref_2 Bool)
(declare-const loc_2 Int)
(declare-const invalidDeref_1 Bool)
(declare-const $r_main0_1 Int)
(declare-const $r_main0_2 Int)
(declare-const $i10_main0_1 Int)
(declare-const $i10_main0_2 Int)
(declare-locvar $p9_main0_1 IntLoc)
(declare-locvar $p9_main0_2 IntLoc)
(declare-locvar $p8_main0_1 IntLoc)
(declare-locvar $p8_main0_2 IntLoc)
(declare-locvar $p7_main0_1 IntLoc)
(declare-locvar $p7_main0_2 IntLoc)
(declare-locvar $p6_main0_1 IntLoc)
(declare-locvar $p6_main0_2 IntLoc)
(declare-locvar $p5_main0_1 IntLoc)
(declare-locvar $p5_main0_2 IntLoc)
(declare-locvar $p4_main0_1 IntLoc)
(declare-locvar $p4_main0_2 IntLoc)
(declare-locvar $p3_main0_1 IntLoc)
(declare-locvar $p3_main0_2 IntLoc)
(declare-locvar $p2_main0_1 IntLoc)
(declare-locvar $p2_main0_2 IntLoc)
(declare-locvar $p1_main0_1 IntLoc)
(declare-locvar $p1_main0_2 IntLoc)
(declare-locvar $p0_main0_1 IntLoc)
(declare-locvar $p0_main0_2 IntLoc)
(declare-hvar H7_2 IntHeap)
(declare-hvar H_2 IntHeap)
(declare-hvar AH5_2 IntHeap)
(declare-hvar AH_2 IntHeap)
(declare-hvar h10_2 IntHeap)
(declare-locvar l24_2 IntLoc)
(declare-const d7_2 Int)
(declare-hvar H6_2 IntHeap)
(declare-const d6_2 Int)
(declare-locvar l20_2 IntLoc)
(declare-locvar l23_2 IntLoc)
(declare-locvar l22_2 IntLoc)
(declare-locvar l21_2 IntLoc)
(declare-hvar ah3 IntHeap)
(declare-hvar AH4_2 IntHeap)
(declare-hvar h9_2 IntHeap)
(declare-locvar l19_2 IntLoc)
(declare-const d4_2 Int)
(declare-hvar H_1 IntHeap)
(declare-const d3_2 Int)
(declare-locvar l15_2 IntLoc)
(declare-locvar l18_2 IntLoc)
(declare-locvar l17_2 IntLoc)
(declare-locvar l16_2 IntLoc)
(declare-hvar ah1 IntHeap)
(declare-hvar AH_1 IntHeap)
(declare-const loc_1 Int)
(declare-const $r_main0_0 Int)
(declare-const invalidDeref4_1 Bool)
(declare-hvar H5_1 IntHeap)
(declare-hvar AH3_1 IntHeap)
(declare-locvar $p9_main01_1 IntLoc)
(declare-locvar $p8_main01_1 IntLoc)
(declare-locvar $p7_main01_1 IntLoc)
(declare-locvar $p6_main01_1 IntLoc)
(declare-locvar $p5_main01_1 IntLoc)
(declare-locvar $p4_main01_1 IntLoc)
(declare-locvar $p3_main01_1 IntLoc)
(declare-locvar $p2_main01_1 IntLoc)
(declare-locvar $p1_main01_1 IntLoc)
(declare-locvar $p0_main01_1 IntLoc)
(declare-const $i10_main01_1 Int)
(declare-const invalidDeref3_1 Bool)
(declare-locvar l13_1 IntLoc)
(declare-hvar h7_1 IntHeap)
(declare-locvar l14_1 IntLoc)
(declare-hvar h8_1 IntHeap)
(declare-const invalidDeref2_1 Bool)
(declare-locvar l11_1 IntLoc)
(declare-hvar h5_1 IntHeap)
(declare-locvar l12_1 IntLoc)
(declare-hvar h6_1 IntHeap)
(declare-const invalidDeref1_1 Bool)
(declare-hvar h3_1 IntHeap)
(declare-locvar l9_1 IntLoc)
(declare-hvar H4_1 IntHeap)
(declare-locvar l10_1 IntLoc)
(declare-hvar h4 IntHeap)
(declare-locvar l8_1 IntLoc)
(declare-hvar AH2_1 IntHeap)
(declare-const d2_1 Int)
(declare-hvar H3_1 IntHeap)
(declare-const invalidDeref_0 Bool)
(declare-hvar h1_1 IntHeap)
(declare-locvar l6_1 IntLoc)
(declare-hvar H2_1 IntHeap)
(declare-locvar l7_1 IntLoc)
(declare-hvar h2 IntHeap)
(declare-locvar l5_1 IntLoc)
(declare-hvar AH1_1 IntHeap)
(declare-const d1_1 Int)
(declare-hvar H1_1 IntHeap)
(declare-locvar l1_1 IntLoc)
(declare-hvar AH_0 IntHeap)
(declare-locvar l3_1 IntLoc)
(declare-locvar l4_1 IntLoc)
(declare-locvar l2_1 IntLoc)
(declare-hvar H_0 IntHeap)
(declare-const loc_0 Int)
(assert
 (let (($x687 (= loc_2 3)))
 (let (($x683 (= invalidDeref_2 invalidDeref_1)))
 (let (($x672 (= $r_main0_2 $r_main0_1)))
 (let (($x673 (and (and true (= $i10_main0_2 $i10_main0_1)) $x672)))
 (let (($x665 (= $p9_main0_2 $p9_main0_1)))
 (let (($x662 (= $p8_main0_2 $p8_main0_1)))
 (let (($x659 (= $p7_main0_2 $p7_main0_1)))
 (let (($x656 (= $p6_main0_2 $p6_main0_1)))
 (let (($x653 (= $p5_main0_2 $p5_main0_1)))
 (let (($x650 (= $p4_main0_2 $p4_main0_1)))
 (let (($x647 (= $p3_main0_2 $p3_main0_1)))
 (let (($x644 (= $p2_main0_2 $p2_main0_1)))
 (let (($x641 (= $p1_main0_2 $p1_main0_1)))
 (let (($x648 (and (and (and (and true (= $p0_main0_2 $p0_main0_1)) $x641) $x644) $x647)))
 (let (($x666 (and (and (and (and (and (and $x648 $x650) $x653) $x656) $x659) $x662) $x665)))
 (let (($x776 (= H_2 H7_2)))
 (let (($x775 (= AH_2 AH5_2)))
 (let (($x777 (and $x775 $x776)))
 (let (($x778 (and $x777 true)))
 (let (($x712 (= H7_2 h10_2)))
 (let (($x713 (= $p9_main0_1 l24_2)))
 (let (($x717 (= H6_2 (uplus h10_2 (pt l24_2 (Pt_R_1 d7_2))))))
 (let (($x720 (= d6_2 1)))
 (let (($x722 (= $p9_main0_1 l20_2)))
 (let ((?x728 (uplus h10_2 (uplus (pt l20_2 (Pt_R_0 l21_2)) (pt l22_2 (Pt_R_0 l23_2))))))
 (let (($x729 (= H6_2 ?x728)))
 (let (($x732 (= d6_2 2)))
 (let (($x734 (and (=> $x732 (and (and $x729 $x722) $x712)) (=> $x720 (and (and $x717 $x713) $x712)))))
 (let (($x735 (= AH5_2 ah3)))
 (let (($x739 (= AH4_2 (uplus ah3 (pt $p9_main0_1 (Pt_R_1 d6_2))))))
 (let (($x741 (and (and $x739 $x735) $x734)))
 (let (($x743 (= H6_2 h9_2)))
 (let (($x744 (= $p7_main0_1 l19_2)))
 (let (($x748 (= H_1 (uplus h9_2 (pt l19_2 (Pt_R_1 d4_2))))))
 (let (($x751 (= d3_2 1)))
 (let (($x753 (= $p7_main0_1 l15_2)))
 (let ((?x759 (uplus h9_2 (uplus (pt l15_2 (Pt_R_0 l16_2)) (pt l17_2 (Pt_R_0 l18_2))))))
 (let (($x760 (= H_1 ?x759)))
 (let (($x763 (= d3_2 2)))
 (let (($x765 (and (=> $x763 (and (and $x760 $x753) $x743)) (=> $x751 (and (and $x748 $x744) $x743)))))
 (let (($x766 (= AH4_2 ah1)))
 (let (($x770 (= AH_1 (uplus ah1 (pt $p7_main0_1 (Pt_R_1 d3_2))))))
 (let (($x772 (and (and $x770 $x766) $x765)))
 (let (($x780 (and (and (and (or $x772 invalidDeref_1) (or $x741 invalidDeref_1)) $x778) $x666)))
 (let (($x628 (= loc_1 2)))
 (let (($x711 (and $x628 (not (= $i10_main0_1 1)))))
 (let (($x679 (= H_2 H_1)))
 (let (($x680 (and (and true (= AH_2 AH_1)) $x679)))
 (let (($x674 (and (and (and (or true invalidDeref_1) (and true true)) $x666) $x673)))
 (let (($x632 (= $i10_main0_1 1)))
 (let (($x633 (and $x628 $x632)))
 (let (($x785 (and (=> $x633 (and (and (and $x674 $x680) $x683) $x687)) (=> $x711 (and (and (and $x780 $x673) $x683) $x687)))))
 (let (($x624 (= $r_main0_1 $r_main0_0)))
 (let (($x625 (and true $x624)))
 (let (($x619 (= invalidDeref_1 invalidDeref4_1)))
 (let (($x616 (= H_1 H5_1)))
 (let (($x613 (= AH_1 AH3_1)))
 (let (($x610 (= $p9_main0_1 $p9_main01_1)))
 (let (($x607 (= $p8_main0_1 $p8_main01_1)))
 (let (($x604 (= $p7_main0_1 $p7_main01_1)))
 (let (($x601 (= $p6_main0_1 $p6_main01_1)))
 (let (($x598 (= $p5_main0_1 $p5_main01_1)))
 (let (($x595 (= $p4_main0_1 $p4_main01_1)))
 (let (($x592 (= $p3_main0_1 $p3_main01_1)))
 (let (($x589 (= $p2_main0_1 $p2_main01_1)))
 (let (($x586 (= $p1_main0_1 $p1_main01_1)))
 (let (($x587 (and (and (= $i10_main0_1 $i10_main01_1) (= $p0_main0_1 $p0_main01_1)) $x586)))
 (let (($x605 (and (and (and (and (and (and $x587 $x589) $x592) $x595) $x598) $x601) $x604)))
 (let (($x617 (and (and (and (and $x605 $x607) $x610) $x613) $x616)))
 (let (($x435 (and (not (= $p7_main01_1 $p9_main01_1)) (= $i10_main01_1 0))))
 (let (($x433 (= $p7_main01_1 $p9_main01_1)))
 (let (($x437 (and $x433 (= $i10_main01_1 1))))
 (let (($x438 (or $x437 $x435)))
 (let (($x440 (= invalidDeref4_1 invalidDeref3_1)))
 (let (($x441 (and invalidDeref3_1 $x440)))
 (let (($x442 (= $p9_main01_1 l13_1)))
 (let (($x446 (= H5_1 (uplus h7_1 (pt $p8_main01_1 (Pt_R_0 l13_1))))))
 (let (($x447 (and $x446 $x442)))
 (let (($x449 (= $p8_main01_1 nil)))
 (let (($x453 (= h8_1 (uplus H5_1 (pt $p8_main01_1 (Pt_R_0 l14_1))))))
 (let (($x461 (= invalidDeref3_1 invalidDeref2_1)))
 (let (($x462 (and invalidDeref2_1 $x461)))
 (let (($x463 (= $p7_main01_1 l11_1)))
 (let (($x467 (= H5_1 (uplus h5_1 (pt $p6_main01_1 (Pt_R_0 l11_1))))))
 (let (($x468 (and $x467 $x463)))
 (let (($x470 (= $p6_main01_1 nil)))
 (let (($x474 (= h6_1 (uplus H5_1 (pt $p6_main01_1 (Pt_R_0 l12_1))))))
 (let (($x481 (= invalidDeref2_1 invalidDeref1_1)))
 (let (($x482 (and invalidDeref1_1 $x481)))
 (let (($x486 (= H5_1 (uplus h3_1 (pt $p5_main01_1 (Pt_R_0 $p4_main01_1))))))
 (let (($x490 (= H4_1 (uplus h3_1 (pt $p5_main01_1 (Pt_R_0 l9_1))))))
 (let (($x491 (and $x490 $x486)))
 (let (($x493 (= $p5_main01_1 nil)))
 (let (($x497 (= h4 (uplus H4_1 (pt $p5_main01_1 (Pt_R_0 l10_1))))))
 (let (($x506 (= AH3_1 (uplus AH2_1 (pt l8_1 (Pt_R_1 1))))))
 (let (($x507 (= $p4_main01_1 l8_1)))
 (let (($x511 (= H4_1 (uplus H3_1 (pt l8_1 (Pt_R_1 d2_1))))))
 (let (($x513 (and (and $x511 $x507) $x506)))
 (let (($x515 (= invalidDeref1_1 invalidDeref_0)))
 (let (($x516 (and invalidDeref_0 $x515)))
 (let (($x520 (= H3_1 (uplus h1_1 (pt $p3_main01_1 (Pt_R_0 $p2_main01_1))))))
 (let (($x524 (= H2_1 (uplus h1_1 (pt $p3_main01_1 (Pt_R_0 l6_1))))))
 (let (($x525 (and $x524 $x520)))
 (let (($x527 (= $p3_main01_1 nil)))
 (let (($x531 (= h2 (uplus H2_1 (pt $p3_main01_1 (Pt_R_0 l7_1))))))
 (let (($x540 (= AH2_1 (uplus AH1_1 (pt l5_1 (Pt_R_1 1))))))
 (let (($x541 (= $p2_main01_1 l5_1)))
 (let (($x545 (= H2_1 (uplus H1_1 (pt l5_1 (Pt_R_1 d1_1))))))
 (let (($x547 (and (and $x545 $x541) $x540)))
 (let (($x553 (= AH1_1 (uplus AH_0 (pt l1_1 (Pt_R_1 2))))))
 (let (($x554 (= $p0_main01_1 l1_1)))
 (let (($x556 (= l3_1 (locadd l1_1 1))))
 (let ((?x562 (uplus H_0 (uplus (pt l1_1 (Pt_R_0 l2_1)) (pt l3_1 (Pt_R_0 l4_1))))))
 (let (($x563 (= H1_1 ?x562)))
 (let (($x566 (and (and (and $x563 $x556) $x554) $x553)))
 (let (($x568 (and (or $x566 invalidDeref_0) (or (= $p1_main01_1 $p0_main01_1) invalidDeref_0))))
 (let (($x570 (and (and $x568 (or $x547 invalidDeref_0)) (or (= $p3_main01_1 $p1_main01_1) invalidDeref_0))))
 (let (($x571 (and $x570 (or (or (and (or $x531 $x527) invalidDeref1_1) (and $x525 $x515)) $x516))))
 (let (($x573 (and (and $x571 (or $x513 invalidDeref1_1)) (or (= $p5_main01_1 (locadd $p1_main01_1 1)) invalidDeref1_1))))
 (let (($x574 (and $x573 (or (or (and (or $x497 $x493) invalidDeref2_1) (and $x491 $x481)) $x482))))
 (let (($x576 (and (and $x574 (or (= $p6_main01_1 $p1_main01_1) invalidDeref2_1)) (or (or (and (or $x474 $x470) invalidDeref3_1) (and $x468 $x461)) $x462))))
 (let (($x577 (and $x576 (or (= $p8_main01_1 (locadd $p1_main01_1 1)) invalidDeref3_1))))
 (let (($x578 (and $x577 (or (or (and (or $x453 $x449) invalidDeref4_1) (and $x447 $x440)) $x441))))
 (let (($x626 (and (and (and $x578 (or $x438 invalidDeref4_1)) (and $x617 $x619)) $x625)))
 (let (($x381 (= loc_0 1)))
 (let (($x385 (not invalidDeref_0)))
 (let (($x383 (and (and (= H_0 emp) (= AH_0 emp)) $x381)))
 (and (and (and (and $x383 $x385) (=> $x381 (and $x626 $x628))) $x785) invalidDeref_2)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
