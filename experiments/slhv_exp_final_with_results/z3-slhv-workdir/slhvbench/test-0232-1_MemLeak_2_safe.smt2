(set-logic SLHV)
(declare-hvar emp IntHeap)
(declare-locvar nil IntLoc)
(declare-datatype pt_record_0 ((Pt_R_0 (loc IntLoc))))
(declare-datatype pt_record_1 ((Pt_R_1 (data Int))))
(declare-const d7 Int)
(declare-locvar l40 IntLoc)
(declare-hvar ah3 IntHeap)
(declare-hvar AH_2 IntHeap)
(declare-const d6 Int)
(declare-locvar l38 IntLoc)
(declare-hvar h28 IntHeap)
(declare-hvar H_2 IntHeap)
(declare-locvar l39 IntLoc)
(declare-const loc_2 Int)
(declare-const $r_main0_1 Int)
(declare-const $r_main0_2 Int)
(declare-const $i7_append0_1 Int)
(declare-const $i7_append0_2 Int)
(declare-const $i2_main0_1 Int)
(declare-const $i2_main0_2 Int)
(declare-locvar $p9_append0_1 IntLoc)
(declare-locvar $p9_append0_2 IntLoc)
(declare-locvar $p8_append0_1 IntLoc)
(declare-locvar $p8_append0_2 IntLoc)
(declare-locvar $p7_main0_1 IntLoc)
(declare-locvar $p7_main0_2 IntLoc)
(declare-locvar $p6_main0_1 IntLoc)
(declare-locvar $p6_main0_2 IntLoc)
(declare-locvar $p6_append0_1 IntLoc)
(declare-locvar $p6_append0_2 IntLoc)
(declare-locvar $p5_main0_1 IntLoc)
(declare-locvar $p5_main0_2 IntLoc)
(declare-locvar $p5_append0_1 IntLoc)
(declare-locvar $p5_append0_2 IntLoc)
(declare-locvar $p4_main0_1 IntLoc)
(declare-locvar $p4_main0_2 IntLoc)
(declare-locvar $p4_append0_1 IntLoc)
(declare-locvar $p4_append0_2 IntLoc)
(declare-locvar $p3_main0_1 IntLoc)
(declare-locvar $p3_main0_2 IntLoc)
(declare-locvar $p3_append0_1 IntLoc)
(declare-locvar $p3_append0_2 IntLoc)
(declare-locvar $p2_append0_1 IntLoc)
(declare-locvar $p2_append0_2 IntLoc)
(declare-locvar $p1_main0_1 IntLoc)
(declare-locvar $p1_main0_2 IntLoc)
(declare-locvar $p1_append0_1 IntLoc)
(declare-locvar $p1_append0_2 IntLoc)
(declare-locvar $p16_append0_1 IntLoc)
(declare-locvar $p16_append0_2 IntLoc)
(declare-locvar $p15_append0_1 IntLoc)
(declare-locvar $p15_append0_2 IntLoc)
(declare-locvar $p12_append0_1 IntLoc)
(declare-locvar $p12_append0_2 IntLoc)
(declare-locvar $p11_append0_1 IntLoc)
(declare-locvar $p11_append0_2 IntLoc)
(declare-locvar $p10_append0_1 IntLoc)
(declare-locvar $p10_append0_2 IntLoc)
(declare-locvar $p0_main0_1 IntLoc)
(declare-locvar $p0_main0_2 IntLoc)
(declare-locvar $p0_append0_1 IntLoc)
(declare-locvar $p0_append0_2 IntLoc)
(declare-hvar H5_2 IntHeap)
(declare-hvar AH3_2 IntHeap)
(declare-locvar $p14_append01_2 IntLoc)
(declare-locvar $p14_append0_2 IntLoc)
(declare-locvar $p13_append02_2 IntLoc)
(declare-locvar $p13_append0_2 IntLoc)
(declare-locvar l18_2 IntLoc)
(declare-hvar AH_1 IntHeap)
(declare-const d2_2 Int)
(declare-hvar H_1 IntHeap)
(declare-const loc_1 Int)
(declare-locvar $p14_append0_1 IntLoc)
(declare-locvar $p9_append01_2 IntLoc)
(declare-locvar $p8_append01_2 IntLoc)
(declare-locvar $p13_append01_2 IntLoc)
(declare-locvar $p12_append01_2 IntLoc)
(declare-locvar $p11_append01_2 IntLoc)
(declare-locvar $p10_append01_2 IntLoc)
(declare-locvar l16_2 IntLoc)
(declare-hvar h11_2 IntHeap)
(declare-locvar l14_2 IntLoc)
(declare-hvar h9_2 IntHeap)
(declare-const $r_main0_0 Int)
(declare-const $i2_main0_0 Int)
(declare-locvar $p9_append0_0 IntLoc)
(declare-locvar $p8_append0_0 IntLoc)
(declare-locvar $p7_main0_0 IntLoc)
(declare-locvar $p6_main0_0 IntLoc)
(declare-locvar $p5_main0_0 IntLoc)
(declare-locvar $p4_main0_0 IntLoc)
(declare-locvar $p3_main0_0 IntLoc)
(declare-locvar $p1_main0_0 IntLoc)
(declare-locvar $p16_append0_0 IntLoc)
(declare-locvar $p15_append0_0 IntLoc)
(declare-locvar $p14_append0_0 IntLoc)
(declare-locvar $p13_append0_0 IntLoc)
(declare-locvar $p13_append0_1 IntLoc)
(declare-locvar $p12_append0_0 IntLoc)
(declare-locvar $p11_append0_0 IntLoc)
(declare-locvar $p10_append0_0 IntLoc)
(declare-hvar H4_1 IntHeap)
(declare-hvar AH2_1 IntHeap)
(declare-locvar $p6_append01_1 IntLoc)
(declare-locvar $p5_append01_1 IntLoc)
(declare-locvar $p4_append01_1 IntLoc)
(declare-locvar $p3_append01_1 IntLoc)
(declare-locvar $p2_append01_1 IntLoc)
(declare-locvar $p1_append01_1 IntLoc)
(declare-locvar $p0_main01_1 IntLoc)
(declare-locvar $p0_append01_1 IntLoc)
(declare-const $i7_append01_1 Int)
(declare-locvar l12_1 IntLoc)
(declare-hvar h7_1 IntHeap)
(declare-hvar h5_1 IntHeap)
(declare-locvar l10_1 IntLoc)
(declare-hvar H3_1 IntHeap)
(declare-locvar l8_1 IntLoc)
(declare-hvar h3_1 IntHeap)
(declare-locvar l4_1 IntLoc)
(declare-hvar AH1_1 IntHeap)
(declare-locvar l6_1 IntLoc)
(declare-locvar l7_1 IntLoc)
(declare-locvar l5_1 IntLoc)
(declare-hvar H2_1 IntHeap)
(declare-hvar h1_1 IntHeap)
(declare-locvar l2_1 IntLoc)
(declare-hvar H1_1 IntHeap)
(declare-locvar l1_1 IntLoc)
(declare-hvar AH_0 IntHeap)
(declare-const d1_1 Int)
(declare-hvar H_0 IntHeap)
(declare-const loc_0 Int)
(assert
 (let (($x1274 (or (= H_2 (uplus h28 (pt l38 (Pt_R_0 l39)))) (= H_2 (uplus h28 (pt l38 (Pt_R_1 d6)))))))
 (let (($x1283 (and (and false $x1274) (= AH_2 (uplus ah3 (pt l40 (Pt_R_1 d7)))))))
 (let (($x1093 (= loc_2 3)))
 (let (($x1081 (= $r_main0_2 $r_main0_1)))
 (let (($x1078 (= $i7_append0_2 $i7_append0_1)))
 (let (($x1082 (and (and (and true (= $i2_main0_2 $i2_main0_1)) $x1078) $x1081)))
 (let (($x1149 (= $p9_append0_2 $p9_append0_1)))
 (let (($x1147 (= $p8_append0_2 $p8_append0_1)))
 (let (($x1071 (= $p7_main0_2 $p7_main0_1)))
 (let (($x1068 (= $p6_main0_2 $p6_main0_1)))
 (let (($x1065 (= $p6_append0_2 $p6_append0_1)))
 (let (($x1062 (= $p5_main0_2 $p5_main0_1)))
 (let (($x1059 (= $p5_append0_2 $p5_append0_1)))
 (let (($x1056 (= $p4_main0_2 $p4_main0_1)))
 (let (($x1053 (= $p4_append0_2 $p4_append0_1)))
 (let (($x1050 (= $p3_main0_2 $p3_main0_1)))
 (let (($x1047 (= $p3_append0_2 $p3_append0_1)))
 (let (($x1044 (= $p2_append0_2 $p2_append0_1)))
 (let (($x1041 (= $p1_main0_2 $p1_main0_1)))
 (let (($x1038 (= $p1_append0_2 $p1_append0_1)))
 (let (($x1035 (= $p16_append0_2 $p16_append0_1)))
 (let (($x1032 (= $p15_append0_2 $p15_append0_1)))
 (let (($x1131 (= $p12_append0_2 $p12_append0_1)))
 (let (($x1129 (= $p11_append0_2 $p11_append0_1)))
 (let (($x1127 (= $p10_append0_2 $p10_append0_1)))
 (let (($x1026 (= $p0_main0_2 $p0_main0_1)))
 (let (($x1027 (and (and true (= $p0_append0_2 $p0_append0_1)) $x1026)))
 (let (($x1135 (and (and (and (and (and (and $x1027 $x1127) $x1129) $x1131) $x1032) $x1035) $x1038)))
 (let (($x1141 (and (and (and (and (and (and $x1135 $x1041) $x1044) $x1047) $x1050) $x1053) $x1056)))
 (let (($x1148 (and (and (and (and (and (and $x1141 $x1059) $x1062) $x1065) $x1068) $x1071) $x1147)))
 (let (($x1150 (and $x1148 $x1149)))
 (let (($x1123 (= H_2 H5_2)))
 (let (($x1121 (= AH_2 AH3_2)))
 (let (($x1119 (= $p14_append0_2 $p14_append01_2)))
 (let (($x1118 (= $p13_append0_2 $p13_append02_2)))
 (let (($x1125 (and (and (and (and $x1118 $x1119) $x1121) $x1123) true)))
 (let (($x1104 (= $p13_append02_2 $p14_append01_2)))
 (let (($x1108 (= AH3_2 (uplus AH_1 (pt l18_2 (Pt_R_1 1))))))
 (let (($x1109 (= $p14_append01_2 l18_2)))
 (let (($x1113 (= H5_2 (uplus H_1 (pt l18_2 (Pt_R_1 d2_2))))))
 (let (($x1115 (and (and $x1113 $x1109) $x1108)))
 (let (($x929 (= loc_1 2)))
 (let (($x1103 (and $x929 (not (= $i7_append0_1 1)))))
 (let (($x1259 (=> $x1103 (and (and (and (and (and $x1115 $x1104) $x1125) $x1150) $x1082) $x1093))))
 (let (($x1088 (= H_2 H_1)))
 (let (($x1089 (and (and true (= AH_2 AH_1)) $x1088)))
 (let (($x1039 (and (and (and (and $x1027 (= $p14_append0_2 $p14_append0_1)) $x1032) $x1035) $x1038)))
 (let (($x1057 (and (and (and (and (and (and $x1039 $x1041) $x1044) $x1047) $x1050) $x1053) $x1056)))
 (let (($x1072 (and (and (and (and (and $x1057 $x1059) $x1062) $x1065) $x1068) $x1071)))
 (let (($x1016 (= $p9_append0_2 $p9_append01_2)))
 (let (($x1013 (= $p8_append0_2 $p8_append01_2)))
 (let (($x1010 (= $p13_append0_2 $p13_append01_2)))
 (let (($x1007 (= $p12_append0_2 $p12_append01_2)))
 (let (($x1004 (= $p11_append0_2 $p11_append01_2)))
 (let (($x1002 (= $p10_append0_2 $p10_append01_2)))
 (let (($x1017 (and (and (and (and (and $x1002 $x1004) $x1007) $x1010) $x1013) $x1016)))
 (let (($x1205 (and $x1017 true)))
 (let (($x951 (= $p13_append01_2 $p11_append01_2)))
 (let (($x953 (= $p12_append01_2 $p11_append01_2)))
 (let (($x962 (and (= H_1 (uplus h11_2 (pt $p10_append01_2 (Pt_R_0 l16_2)))) (= $p11_append01_2 l16_2))))
 (let (($x974 (= $p10_append01_2 (locadd $p9_append01_2 1))))
 (let (($x983 (and (= H_1 (uplus h9_2 (pt $p8_append01_2 (Pt_R_0 l14_2)))) (= $p9_append01_2 l14_2))))
 (let (($x994 (= $p8_append01_2 $p2_append0_1)))
 (let (($x1248 (and (and (and (and (and (and $x994 $x983) $x974) $x962) $x953) $x951) $x1205)))
 (let (($x949 (= $i7_append0_1 1)))
 (let (($x950 (and $x929 $x949)))
 (let (($x1260 (and (=> $x950 (and (and (and (and $x1248 $x1072) $x1082) $x1089) $x1093)) $x1259)))
 (let (($x925 (= $r_main0_1 $r_main0_0)))
 (let (($x926 (and (and true (= $i2_main0_1 $i2_main0_0)) $x925)))
 (let (($x916 (= $p9_append0_1 $p9_append0_0)))
 (let (($x912 (= $p8_append0_1 $p8_append0_0)))
 (let (($x908 (= $p7_main0_1 $p7_main0_0)))
 (let (($x904 (= $p6_main0_1 $p6_main0_0)))
 (let (($x900 (= $p5_main0_1 $p5_main0_0)))
 (let (($x896 (= $p4_main0_1 $p4_main0_0)))
 (let (($x892 (= $p3_main0_1 $p3_main0_0)))
 (let (($x888 (= $p1_main0_1 $p1_main0_0)))
 (let (($x884 (= $p16_append0_1 $p16_append0_0)))
 (let (($x880 (= $p15_append0_1 $p15_append0_0)))
 (let (($x876 (= $p14_append0_1 $p14_append0_0)))
 (let (($x872 (= $p13_append0_1 $p13_append0_0)))
 (let (($x868 (= $p12_append0_1 $p12_append0_0)))
 (let (($x864 (= $p11_append0_1 $p11_append0_0)))
 (let (($x869 (and (and (and true (= $p10_append0_1 $p10_append0_0)) $x864) $x868)))
 (let (($x893 (and (and (and (and (and (and $x869 $x872) $x876) $x880) $x884) $x888) $x892)))
 (let (($x917 (and (and (and (and (and (and $x893 $x896) $x900) $x904) $x908) $x912) $x916)))
 (let (($x852 (= H_1 H4_1)))
 (let (($x849 (= AH_1 AH2_1)))
 (let (($x846 (= $p6_append0_1 $p6_append01_1)))
 (let (($x843 (= $p5_append0_1 $p5_append01_1)))
 (let (($x840 (= $p4_append0_1 $p4_append01_1)))
 (let (($x837 (= $p3_append0_1 $p3_append01_1)))
 (let (($x834 (= $p2_append0_1 $p2_append01_1)))
 (let (($x831 (= $p1_append0_1 $p1_append01_1)))
 (let (($x828 (= $p0_main0_1 $p0_main01_1)))
 (let (($x825 (= $p0_append0_1 $p0_append01_1)))
 (let (($x823 (= $i7_append0_1 $i7_append01_1)))
 (let (($x841 (and (and (and (and (and (and $x823 $x825) $x828) $x831) $x834) $x837) $x840)))
 (let (($x853 (and (and (and (and $x841 $x843) $x846) $x849) $x852)))
 (let (($x1184 (and $x853 true)))
 (let (($x697 (or (and (and (distinct $p6_append01_1 nil) true) (= $i7_append01_1 1)) (and (not (and (distinct $p6_append01_1 nil) true)) (= $i7_append01_1 0)))))
 (let (($x706 (and (= H4_1 (uplus h7_1 (pt $p5_append01_1 (Pt_R_0 l12_1)))) (= $p6_append01_1 l12_1))))
 (let (($x717 (= $p5_append01_1 $p2_append01_1)))
 (let (($x724 (= H4_1 (uplus h5_1 (pt $p4_append01_1 (Pt_R_0 $p3_append01_1))))))
 (let (($x729 (and (= H3_1 (uplus h5_1 (pt $p4_append01_1 (Pt_R_0 l10_1)))) $x724)))
 (let (($x740 (= $p4_append01_1 $p2_append01_1)))
 (let (($x749 (and (= H3_1 (uplus h3_1 (pt $p0_append01_1 (Pt_R_0 l8_1)))) (= $p3_append01_1 l8_1))))
 (let (($x760 (= $p2_append01_1 $p1_append01_1)))
 (let (($x764 (= AH2_1 (uplus AH1_1 (pt l4_1 (Pt_R_1 2))))))
 (let (($x765 (= $p1_append01_1 l4_1)))
 (let (($x767 (= l6_1 (locadd l4_1 1))))
 (let ((?x773 (uplus H2_1 (uplus (pt l4_1 (Pt_R_0 l5_1)) (pt l6_1 (Pt_R_0 l7_1))))))
 (let (($x774 (= H3_1 ?x773)))
 (let (($x777 (and (and (and $x774 $x767) $x765) $x764)))
 (let (($x779 (= $p0_append01_1 $p0_main01_1)))
 (let (($x790 (and (= H1_1 (uplus h1_1 (pt $p0_main01_1 (Pt_R_0 l2_1)))) (= H2_1 (uplus h1_1 (pt $p0_main01_1 (Pt_R_0 nil)))))))
 (let (($x803 (= AH1_1 (uplus AH_0 (pt l1_1 (Pt_R_1 1))))))
 (let (($x804 (= $p0_main01_1 l1_1)))
 (let (($x808 (= H1_1 (uplus H_0 (pt l1_1 (Pt_R_1 d1_1))))))
 (let (($x810 (and (and $x808 $x804) $x803)))
 (let (($x1232 (and (and (and (and (and (and $x810 $x790) $x779) $x777) $x760) $x749) $x740)))
 (let (($x1238 (and (and (and (and (and (and $x1232 $x729) $x717) $x706) $x697) $x1184) $x917)))
 (let (($x646 (= loc_0 1)))
 (let (($x648 (and (and (= H_0 emp) (= AH_0 emp)) $x646)))
 (and (and (and $x648 (=> $x646 (and (and $x1238 $x926) $x929))) $x1260) $x1283))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
