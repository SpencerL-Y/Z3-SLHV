(set-logic SLHV)
(declare-hvar emp IntHeap)
(declare-locvar nil IntLoc)
(declare-datatype pt_record_0 ((Pt_R_0 (loc IntLoc))))
(declare-datatype pt_record_1 ((Pt_R_1 (data Int))))
(declare-const invalidDeref_1 Bool)
(declare-const loc_1 Int)
(declare-const $r_main0_0 Int)
(declare-const $r_main0_1 Int)
(declare-locvar $p11_main0_0 IntLoc)
(declare-locvar $p11_main0_1 IntLoc)
(declare-const invalidDeref4_1 Bool)
(declare-hvar H5_1 IntHeap)
(declare-hvar H_1 IntHeap)
(declare-hvar AH3_1 IntHeap)
(declare-hvar AH_1 IntHeap)
(declare-locvar $p9_main01_1 IntLoc)
(declare-locvar $p9_main0_1 IntLoc)
(declare-locvar $p8_main01_1 IntLoc)
(declare-locvar $p8_main0_1 IntLoc)
(declare-locvar $p7_main01_1 IntLoc)
(declare-locvar $p7_main0_1 IntLoc)
(declare-locvar $p6_main01_1 IntLoc)
(declare-locvar $p6_main0_1 IntLoc)
(declare-locvar $p5_main01_1 IntLoc)
(declare-locvar $p5_main0_1 IntLoc)
(declare-locvar $p4_main01_1 IntLoc)
(declare-locvar $p4_main0_1 IntLoc)
(declare-locvar $p3_main01_1 IntLoc)
(declare-locvar $p3_main0_1 IntLoc)
(declare-locvar $p2_main01_1 IntLoc)
(declare-locvar $p2_main0_1 IntLoc)
(declare-locvar $p1_main01_1 IntLoc)
(declare-locvar $p1_main0_1 IntLoc)
(declare-locvar $p0_main01_1 IntLoc)
(declare-locvar $p0_main0_1 IntLoc)
(declare-const $i10_main01_1 Int)
(declare-const $i10_main0_1 Int)
(declare-const invalidDeref3_1 Bool)
(declare-locvar l13_1 IntLoc)
(declare-hvar h7_1 IntHeap)
(declare-locvar l14_1 IntLoc)
(declare-hvar h8_1 IntHeap)
(declare-const invalidDeref2_1 Bool)
(declare-locvar l11_1 IntLoc)
(declare-hvar h5_1 IntHeap)
(declare-locvar l12_1 IntLoc)
(declare-hvar h6_1 IntHeap)
(declare-const invalidDeref1_1 Bool)
(declare-hvar h3_1 IntHeap)
(declare-locvar l9_1 IntLoc)
(declare-hvar H4_1 IntHeap)
(declare-locvar l10_1 IntLoc)
(declare-hvar h4 IntHeap)
(declare-locvar l8_1 IntLoc)
(declare-hvar AH2_1 IntHeap)
(declare-const d2_1 Int)
(declare-hvar H3_1 IntHeap)
(declare-const invalidDeref_0 Bool)
(declare-hvar h1_1 IntHeap)
(declare-locvar l6_1 IntLoc)
(declare-hvar H2_1 IntHeap)
(declare-locvar l7_1 IntLoc)
(declare-hvar h2 IntHeap)
(declare-locvar l5_1 IntLoc)
(declare-hvar AH1_1 IntHeap)
(declare-const d1_1 Int)
(declare-hvar H1_1 IntHeap)
(declare-locvar l1_1 IntLoc)
(declare-hvar AH_0 IntHeap)
(declare-locvar l3_1 IntLoc)
(declare-locvar l4_1 IntLoc)
(declare-locvar l2_1 IntLoc)
(declare-hvar H_0 IntHeap)
(declare-const loc_0 Int)
(assert
 (let (($x701 (= loc_1 2)))
 (let (($x697 (= $r_main0_1 $r_main0_0)))
 (let (($x698 (and true $x697)))
 (let (($x692 (= $p11_main0_1 $p11_main0_0)))
 (let (($x693 (and true $x692)))
 (let (($x687 (= invalidDeref_1 invalidDeref4_1)))
 (let (($x684 (= H_1 H5_1)))
 (let (($x681 (= AH_1 AH3_1)))
 (let (($x678 (= $p9_main0_1 $p9_main01_1)))
 (let (($x675 (= $p8_main0_1 $p8_main01_1)))
 (let (($x672 (= $p7_main0_1 $p7_main01_1)))
 (let (($x669 (= $p6_main0_1 $p6_main01_1)))
 (let (($x666 (= $p5_main0_1 $p5_main01_1)))
 (let (($x663 (= $p4_main0_1 $p4_main01_1)))
 (let (($x660 (= $p3_main0_1 $p3_main01_1)))
 (let (($x657 (= $p2_main0_1 $p2_main01_1)))
 (let (($x654 (= $p1_main0_1 $p1_main01_1)))
 (let (($x655 (and (and (= $i10_main0_1 $i10_main01_1) (= $p0_main0_1 $p0_main01_1)) $x654)))
 (let (($x673 (and (and (and (and (and (and $x655 $x657) $x660) $x663) $x666) $x669) $x672)))
 (let (($x685 (and (and (and (and $x673 $x675) $x678) $x681) $x684)))
 (let (($x500 (= $i10_main01_1 0)))
 (let (($x501 (= $p7_main01_1 $p9_main01_1)))
 (let (($x502 (not $x501)))
 (let (($x503 (and $x502 $x500)))
 (let (($x504 (= $i10_main01_1 1)))
 (let (($x505 (and $x501 $x504)))
 (let (($x506 (or $x505 $x503)))
 (let (($x508 (= invalidDeref4_1 invalidDeref3_1)))
 (let (($x509 (and invalidDeref3_1 $x508)))
 (let (($x510 (= $p9_main01_1 l13_1)))
 (let (($x514 (= H5_1 (uplus h7_1 (pt $p8_main01_1 (Pt_R_0 l13_1))))))
 (let (($x515 (and $x514 $x510)))
 (let (($x517 (= $p8_main01_1 nil)))
 (let (($x521 (= h8_1 (uplus H5_1 (pt $p8_main01_1 (Pt_R_0 l14_1))))))
 (let (($x529 (= invalidDeref3_1 invalidDeref2_1)))
 (let (($x530 (and invalidDeref2_1 $x529)))
 (let (($x531 (= $p7_main01_1 l11_1)))
 (let (($x535 (= H5_1 (uplus h5_1 (pt $p6_main01_1 (Pt_R_0 l11_1))))))
 (let (($x536 (and $x535 $x531)))
 (let (($x538 (= $p6_main01_1 nil)))
 (let (($x542 (= h6_1 (uplus H5_1 (pt $p6_main01_1 (Pt_R_0 l12_1))))))
 (let (($x549 (= invalidDeref2_1 invalidDeref1_1)))
 (let (($x550 (and invalidDeref1_1 $x549)))
 (let (($x554 (= H5_1 (uplus h3_1 (pt $p5_main01_1 (Pt_R_0 $p4_main01_1))))))
 (let (($x558 (= H4_1 (uplus h3_1 (pt $p5_main01_1 (Pt_R_0 l9_1))))))
 (let (($x559 (and $x558 $x554)))
 (let (($x561 (= $p5_main01_1 nil)))
 (let (($x565 (= h4 (uplus H4_1 (pt $p5_main01_1 (Pt_R_0 l10_1))))))
 (let (($x574 (= AH3_1 (uplus AH2_1 (pt l8_1 (Pt_R_1 1))))))
 (let (($x575 (= $p4_main01_1 l8_1)))
 (let (($x579 (= H4_1 (uplus H3_1 (pt l8_1 (Pt_R_1 d2_1))))))
 (let (($x581 (and (and $x579 $x575) $x574)))
 (let (($x583 (= invalidDeref1_1 invalidDeref_0)))
 (let (($x584 (and invalidDeref_0 $x583)))
 (let (($x588 (= H3_1 (uplus h1_1 (pt $p3_main01_1 (Pt_R_0 $p2_main01_1))))))
 (let (($x592 (= H2_1 (uplus h1_1 (pt $p3_main01_1 (Pt_R_0 l6_1))))))
 (let (($x593 (and $x592 $x588)))
 (let (($x595 (= $p3_main01_1 nil)))
 (let (($x599 (= h2 (uplus H2_1 (pt $p3_main01_1 (Pt_R_0 l7_1))))))
 (let (($x608 (= AH2_1 (uplus AH1_1 (pt l5_1 (Pt_R_1 1))))))
 (let (($x609 (= $p2_main01_1 l5_1)))
 (let (($x613 (= H2_1 (uplus H1_1 (pt l5_1 (Pt_R_1 d1_1))))))
 (let (($x615 (and (and $x613 $x609) $x608)))
 (let (($x621 (= AH1_1 (uplus AH_0 (pt l1_1 (Pt_R_1 2))))))
 (let (($x622 (= $p0_main01_1 l1_1)))
 (let (($x624 (= l3_1 (locadd l1_1 1))))
 (let ((?x630 (uplus H_0 (uplus (pt l1_1 (Pt_R_0 l2_1)) (pt l3_1 (Pt_R_0 l4_1))))))
 (let (($x631 (= H1_1 ?x630)))
 (let (($x634 (and (and (and $x631 $x624) $x622) $x621)))
 (let (($x636 (and (or $x634 invalidDeref_0) (or (= $p1_main01_1 $p0_main01_1) invalidDeref_0))))
 (let (($x638 (and (and $x636 (or $x615 invalidDeref_0)) (or (= $p3_main01_1 $p1_main01_1) invalidDeref_0))))
 (let (($x639 (and $x638 (or (or (and (or $x599 $x595) invalidDeref1_1) (and $x593 $x583)) $x584))))
 (let (($x641 (and (and $x639 (or $x581 invalidDeref1_1)) (or (= $p5_main01_1 (locadd $p1_main01_1 1)) invalidDeref1_1))))
 (let (($x642 (and $x641 (or (or (and (or $x565 $x561) invalidDeref2_1) (and $x559 $x549)) $x550))))
 (let (($x644 (and (and $x642 (or (= $p6_main01_1 $p1_main01_1) invalidDeref2_1)) (or (or (and (or $x542 $x538) invalidDeref3_1) (and $x536 $x529)) $x530))))
 (let (($x645 (and $x644 (or (= $p8_main01_1 (locadd $p1_main01_1 1)) invalidDeref3_1))))
 (let (($x646 (and $x645 (or (or (and (or $x521 $x517) invalidDeref4_1) (and $x515 $x508)) $x509))))
 (let (($x694 (and (and (and $x646 (or $x506 invalidDeref4_1)) (and $x685 $x687)) $x693)))
 (let (($x449 (= loc_0 1)))
 (let (($x453 (not invalidDeref_0)))
 (let (($x451 (and (and (= H_0 emp) (= AH_0 emp)) $x449)))
 (and (and (and $x451 $x453) (=> $x449 (and (and $x694 $x698) $x701))) invalidDeref_1)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
