; 
(set-info :status unknown)
(declare-sort Heap 0)
 (declare-fun accessible (Heap Int Int) Bool)
(declare-fun free (Heap Int) Heap)
(declare-fun disjoint (Int Int Int Int) Bool)
(declare-fun mallocsize (Heap Int) Int)
(declare-fun freeable (Heap Int) Bool)
(declare-fun malloc (Heap Int Int) Heap)
(declare-fun contained (Int Int Int Int) Bool)
(declare-fun mallocable (Heap Int Int) Bool)
(declare-fun epsilon () Heap)
(declare-fun heaptop (Heap) Int)
(declare-fun mallocable_top (Heap Int Int) Bool)
(declare-fun mallocable_size (Heap Int Int) Bool)
(declare-fun read (Heap Int) Int)
(declare-fun write (Heap Int Int) Heap)
(declare-fun l1 () Int)
(declare-fun A_5 () Heap)
(declare-fun loc_5 () Int)
(declare-fun $i2_main0_4 () Int)
(declare-fun $i2_main0_5 () Int)
(declare-fun $i1_free_g20_4 () Int)
(declare-fun $i1_free_g20_5 () Int)
(declare-fun $i0_h0_4 () Int)
(declare-fun $i0_h0_5 () Int)
(declare-fun $p9_main0_4 () Int)
(declare-fun $p9_main0_5 () Int)
(declare-fun $p8_main0_4 () Int)
(declare-fun $p8_main0_5 () Int)
(declare-fun $p7_main0_4 () Int)
(declare-fun $p7_main0_5 () Int)
(declare-fun $p6_main0_4 () Int)
(declare-fun $p6_main0_5 () Int)
(declare-fun $p5_main0_4 () Int)
(declare-fun $p5_main0_5 () Int)
(declare-fun $p4_main0_4 () Int)
(declare-fun $p4_main0_5 () Int)
(declare-fun $p4_free_g20_4 () Int)
(declare-fun $p4_free_g20_5 () Int)
(declare-fun $p3_main0_4 () Int)
(declare-fun $p3_main0_5 () Int)
(declare-fun $p3_free_g20_4 () Int)
(declare-fun $p3_free_g20_5 () Int)
(declare-fun $p2_free_g20_4 () Int)
(declare-fun $p2_free_g20_5 () Int)
(declare-fun $p1_main0_4 () Int)
(declare-fun $p1_main0_5 () Int)
(declare-fun $p10_main0_4 () Int)
(declare-fun $p10_main0_5 () Int)
(declare-fun $p0_main0_4 () Int)
(declare-fun $p0_main0_5 () Int)
(declare-fun $p0_free_g20_4 () Int)
(declare-fun $p0_free_g20_5 () Int)
(declare-fun $M.0_4 () Int)
(declare-fun $M.0_5 () Int)
(declare-fun $r_main01_5 () Int)
(declare-fun $r_main0_5 () Int)
(declare-fun loc_4 () Int)
(declare-fun $r_main0_4 () Int)
(declare-fun $r_main0_3 () Int)
(declare-fun $i2_main0_3 () Int)
(declare-fun $i1_free_g20_3 () Int)
(declare-fun $i0_h0_3 () Int)
(declare-fun $p9_main0_3 () Int)
(declare-fun $p8_main0_3 () Int)
(declare-fun $p7_main0_3 () Int)
(declare-fun $p6_main0_3 () Int)
(declare-fun $p5_main0_3 () Int)
(declare-fun $p4_main0_3 () Int)
(declare-fun $p4_free_g20_3 () Int)
(declare-fun $p3_main0_3 () Int)
(declare-fun $p3_free_g20_3 () Int)
(declare-fun $p2_free_g20_3 () Int)
(declare-fun $p1_main0_3 () Int)
(declare-fun $p10_main0_3 () Int)
(declare-fun $p0_main0_3 () Int)
(declare-fun $p0_free_g20_3 () Int)
(declare-fun $M.0_3 () Int)
(declare-fun loc_3 () Int)
(declare-fun A6_4 () Heap)
(declare-fun A_4 () Heap)
(declare-fun $p4_free_g201_4 () Int)
(declare-fun $p3_free_g201_4 () Int)
(declare-fun $p2_free_g201_4 () Int)
(declare-fun A_3 () Heap)
(declare-fun $r_main0_2 () Int)
(declare-fun $i2_main0_2 () Int)
(declare-fun $i0_h0_2 () Int)
(declare-fun $p5_main0_2 () Int)
(declare-fun $p4_main0_2 () Int)
(declare-fun $p4_free_g20_2 () Int)
(declare-fun $p3_main0_2 () Int)
(declare-fun $p3_free_g20_2 () Int)
(declare-fun $p2_free_g20_2 () Int)
(declare-fun $p1_main0_2 () Int)
(declare-fun $p0_main0_2 () Int)
(declare-fun A5_3 () Heap)
(declare-fun $p9_main01_3 () Int)
(declare-fun $p8_main01_3 () Int)
(declare-fun $p7_main01_3 () Int)
(declare-fun $p6_main01_3 () Int)
(declare-fun $p10_main01_3 () Int)
(declare-fun $p0_free_g201_3 () Int)
(declare-fun $i1_free_g201_3 () Int)
(declare-fun $M.03_3 () Int)
(declare-fun A4_3 () Heap)
(declare-fun $M.0_2 () Int)
(declare-fun A_2 () Heap)
(declare-fun loc_2 () Int)
(declare-fun $i1_free_g20_2 () Int)
(declare-fun $p9_main0_2 () Int)
(declare-fun $p8_main0_2 () Int)
(declare-fun $p7_main0_2 () Int)
(declare-fun $p6_main0_2 () Int)
(declare-fun $p10_main0_2 () Int)
(declare-fun $p0_free_g20_2 () Int)
(declare-fun $r_main0_1 () Int)
(declare-fun $i2_main0_1 () Int)
(declare-fun $i1_free_g20_1 () Int)
(declare-fun $i0_h0_1 () Int)
(declare-fun $p9_main0_1 () Int)
(declare-fun $p8_main0_1 () Int)
(declare-fun $p7_main0_1 () Int)
(declare-fun $p6_main0_1 () Int)
(declare-fun $p4_free_g20_1 () Int)
(declare-fun $p3_free_g20_1 () Int)
(declare-fun $p2_free_g20_1 () Int)
(declare-fun $p1_main0_1 () Int)
(declare-fun $p10_main0_1 () Int)
(declare-fun $p0_main0_1 () Int)
(declare-fun $p0_free_g20_1 () Int)
(declare-fun $M.0_1 () Int)
(declare-fun A3_2 () Heap)
(declare-fun $p5_main01_2 () Int)
(declare-fun $p4_main01_2 () Int)
(declare-fun $p3_main01_2 () Int)
(declare-fun A2_2 () Heap)
(declare-fun A_1 () Heap)
(declare-fun loc_1 () Int)
(declare-fun $p5_main0_1 () Int)
(declare-fun $p4_main0_1 () Int)
(declare-fun $p3_main0_1 () Int)
(declare-fun $r_main0_0 () Int)
(declare-fun $i2_main0_0 () Int)
(declare-fun $i1_free_g20_0 () Int)
(declare-fun $i0_h0_0 () Int)
(declare-fun $p9_main0_0 () Int)
(declare-fun $p8_main0_0 () Int)
(declare-fun $p7_main0_0 () Int)
(declare-fun $p6_main0_0 () Int)
(declare-fun $p5_main0_0 () Int)
(declare-fun $p4_main0_0 () Int)
(declare-fun $p4_free_g20_0 () Int)
(declare-fun $p3_main0_0 () Int)
(declare-fun $p3_free_g20_0 () Int)
(declare-fun $p2_free_g20_0 () Int)
(declare-fun $p10_main0_0 () Int)
(declare-fun $p0_free_g20_0 () Int)
(declare-fun A1_1 () Heap)
(declare-fun $p1_main01_1 () Int)
(declare-fun $p0_main01_1 () Int)
(declare-fun $M.02_1 () Int)
(declare-fun A_0 () Heap)
(declare-fun $M.01_1 () Int)
(declare-fun loc_0 () Int)
(assert
 (forall ((h Heap) (p Int) (s Int) (q Int) (t Int) )(let (($x151 (freeable h p)))
 (let (($x152 (and $x151 (not (disjoint p (mallocsize h p) q t)))))
 (let (($x154 (accessible h q t)))
 (let (($x146 (accessible (free h p) q t)))
 (let (($x155 (= $x146 $x154)))
 (let (($x149 (disjoint p (mallocsize h p) q t)))
 (let (($x156 (and $x151 $x149)))
 (let (($x161 (accessible (malloc h p s) q t)))
 (let (($x162 (= $x161 $x154)))
 (let (($x46 (contained p s q t)))
 (let (($x164 (and (mallocable h p s) $x46)))
 (let (($x165 (not $x164)))
 (let (($x171 (and (= (accessible epsilon p s) false) (=> $x164 (= $x161 true)))))
 (let (($x174 (and (and (and $x171 (=> $x165 $x162)) (=> (not $x151) $x155)) (=> $x156 $x155))))
 (and $x174 (=> $x152 (= $x146 false))))))))))))))))))
 )
(assert
 (forall ((h Heap) (p Int) (s Int) (q Int) )(let (($x92 (freeable h q)))
 (let ((?x93 (free h p)))
 (let (($x94 (freeable ?x93 q)))
 (let (($x95 (= $x94 $x92)))
 (let (($x30 (and (distinct p q) true)))
 (let ((?x99 (malloc h p s)))
 (let (($x100 (freeable ?x99 q)))
 (let (($x101 (= $x100 $x92)))
 (let (($x33 (= p q)))
 (let (($x103 (and (mallocable h p s) $x33)))
 (let (($x104 (not $x103)))
 (let (($x111 (and (and (= (freeable epsilon q) false) (=> $x103 (= $x100 true))) (=> $x104 $x101))))
 (and (and $x111 (=> $x33 (= $x94 false))) (=> $x30 $x95)))))))))))))))
 )
(assert
 (forall ((h Heap) (p Int) (s Int) )(let ((?x63 (heaptop h)))
 (let (($x66 (= (heaptop (free h p)) ?x63)))
 (let (($x14 (= (heaptop epsilon) 0)))
 (and (and $x14 $x66) (= (heaptop (malloc h p s)) (+ p s)))))))
 )
(assert
 (forall ((h Heap) (p Int) (s Int) )(= (mallocable h p s) (and (mallocable_size h p s) (mallocable_top h p s))))
 )
(assert
 (forall ((h Heap) (p Int) (s Int) (q Int) )(let ((?x117 (mallocsize h q)))
 (let ((?x99 (malloc h p s)))
 (let ((?x118 (mallocsize ?x99 q)))
 (let (($x119 (= ?x118 ?x117)))
 (let (($x33 (= p q)))
 (let (($x103 (and (mallocable h p s) $x33)))
 (let (($x104 (not $x103)))
 (let ((?x93 (free h p)))
 (let ((?x123 (mallocsize ?x93 q)))
 (let (($x124 (= ?x123 ?x117)))
 (let (($x126 (and (freeable h p) $x33)))
 (let (($x127 (not $x126)))
 (let (($x134 (and (and (= (mallocsize epsilon q) 0) (=> $x126 (= ?x123 0))) (=> $x127 $x124))))
 (and (and $x134 (=> $x103 (= ?x118 s))) (=> $x104 $x119))))))))))))))))
 )
(assert
 (forall ((h Heap) (p Int) (x Int) (q Int) )(let ((?x28 (read (write h p x) q)))
 (let (($x29 (= ?x28 (read h q))))
 (let (($x30 (and (distinct p q) true)))
 (and (=> (= p q) (= ?x28 x)) (=> $x30 $x29))))))
 )
(assert
 (forall ((p Int) (s Int) (q Int) (t Int) )(let (($x46 (contained p s q t)))
 (= $x46 (and (<= p q) (<= (+ q t) (+ p s))))))
 )
(assert
 (forall ((p Int) (s Int) (q Int) (t Int) )(let (($x40 (disjoint p s q t)))
 (= $x40 (or (<= (+ p s) q) (<= (+ q t) p)))))
 )
(assert
 (forall ((h Heap) (p Int) (s Int) )(let (($x18 (mallocable_size h p s)))
 (= $x18 (and (distinct s 0) true))))
 )
(assert
 (forall ((h Heap) (p Int) (s Int) )(let (($x55 (mallocable_top h p s)))
 (= $x55 (>= p (heaptop h)))))
 )
(assert
 (let (($x1265 (freeable A_5 l1)))
 (let (($x1266 (and (or (or (= loc_5 3) (= loc_5 5)) (= loc_5 8)) $x1265)))
 (let (($x1010 (= loc_5 8)))
 (let (($x983 (= $i2_main0_5 $i2_main0_4)))
 (let (($x980 (= $i1_free_g20_5 $i1_free_g20_4)))
 (let (($x984 (and (and (and true (= $i0_h0_5 $i0_h0_4)) $x980) $x983)))
 (let (($x973 (= $p9_main0_5 $p9_main0_4)))
 (let (($x970 (= $p8_main0_5 $p8_main0_4)))
 (let (($x967 (= $p7_main0_5 $p7_main0_4)))
 (let (($x964 (= $p6_main0_5 $p6_main0_4)))
 (let (($x961 (= $p5_main0_5 $p5_main0_4)))
 (let (($x958 (= $p4_main0_5 $p4_main0_4)))
 (let (($x955 (= $p4_free_g20_5 $p4_free_g20_4)))
 (let (($x952 (= $p3_main0_5 $p3_main0_4)))
 (let (($x949 (= $p3_free_g20_5 $p3_free_g20_4)))
 (let (($x946 (= $p2_free_g20_5 $p2_free_g20_4)))
 (let (($x943 (= $p1_main0_5 $p1_main0_4)))
 (let (($x940 (= $p10_main0_5 $p10_main0_4)))
 (let (($x937 (= $p0_main0_5 $p0_main0_4)))
 (let (($x934 (= $p0_free_g20_5 $p0_free_g20_4)))
 (let (($x944 (and (and (and (and (and true (= $M.0_5 $M.0_4)) $x934) $x937) $x940) $x943)))
 (let (($x962 (and (and (and (and (and (and $x944 $x946) $x949) $x952) $x955) $x958) $x961)))
 (let (($x974 (and (and (and (and $x962 $x964) $x967) $x970) $x973)))
 (let (($x1003 (= $r_main0_5 $r_main01_5)))
 (let (($x1004 (and $x1003 true)))
 (let (($x1001 (= $r_main01_5 0)))
 (let (($x919 (= loc_4 7)))
 (let (($x996 (= loc_5 5)))
 (let (($x986 (= $r_main0_5 $r_main0_4)))
 (let (($x987 (and $x984 $x986)))
 (let (($x1248 (and (and (and true true) $x974) $x987)))
 (let (($x864 (= loc_4 5)))
 (let (($x1253 (and (=> (= loc_4 3) (and $x1248 (= loc_5 3))) (=> $x864 (and $x1248 $x996)))))
 (let (($x1259 (and $x1253 (=> $x919 (and (and (and (and $x1001 $x1004) $x974) $x984) $x1010)))))
 (let (($x854 (= $r_main0_4 $r_main0_3)))
 (let (($x851 (= $i2_main0_4 $i2_main0_3)))
 (let (($x848 (= $i1_free_g20_4 $i1_free_g20_3)))
 (let (($x855 (and (and (and (and true (= $i0_h0_4 $i0_h0_3)) $x848) $x851) $x854)))
 (let (($x841 (= $p9_main0_4 $p9_main0_3)))
 (let (($x838 (= $p8_main0_4 $p8_main0_3)))
 (let (($x835 (= $p7_main0_4 $p7_main0_3)))
 (let (($x832 (= $p6_main0_4 $p6_main0_3)))
 (let (($x829 (= $p5_main0_4 $p5_main0_3)))
 (let (($x826 (= $p4_main0_4 $p4_main0_3)))
 (let (($x823 (= $p4_free_g20_4 $p4_free_g20_3)))
 (let (($x820 (= $p3_main0_4 $p3_main0_3)))
 (let (($x817 (= $p3_free_g20_4 $p3_free_g20_3)))
 (let (($x814 (= $p2_free_g20_4 $p2_free_g20_3)))
 (let (($x811 (= $p1_main0_4 $p1_main0_3)))
 (let (($x808 (= $p10_main0_4 $p10_main0_3)))
 (let (($x805 (= $p0_main0_4 $p0_main0_3)))
 (let (($x802 (= $p0_free_g20_4 $p0_free_g20_3)))
 (let (($x812 (and (and (and (and (and true (= $M.0_4 $M.0_3)) $x802) $x805) $x808) $x811)))
 (let (($x830 (and (and (and (and (and (and $x812 $x814) $x817) $x820) $x823) $x826) $x829)))
 (let (($x842 (and (and (and (and $x830 $x832) $x835) $x838) $x841)))
 (let (($x492 (and true true)))
 (let (($x1227 (and (and $x492 $x842) $x855)))
 (let (($x792 (= loc_3 6)))
 (let (($x924 (and $x792 (not (= $i1_free_g20_3 1)))))
 (let (($x914 (and (and (and (and (and (and $x812 $x820) $x826) $x829) $x832) $x835) $x838)))
 (let (($x915 (and $x914 $x841)))
 (let (($x904 (= A_4 A6_4)))
 (let (($x901 (= $p4_free_g20_4 $p4_free_g201_4)))
 (let (($x899 (= $p3_free_g20_4 $p3_free_g201_4)))
 (let (($x898 (= $p2_free_g20_4 $p2_free_g201_4)))
 (let (($x905 (and (and (and $x898 $x899) $x901) $x904)))
 (let (($x876 (= A6_4 (free A_3 $p4_free_g201_4))))
 (let (($x877 (freeable A_3 $p4_free_g201_4)))
 (let (($x878 (and $x877 $x876)))
 (let (($x880 (= $p4_free_g201_4 $p3_free_g201_4)))
 (let (($x885 (= $p3_free_g201_4 (read A_3 $p2_free_g201_4))))
 (let (($x893 (= $p2_free_g201_4 $M.0_3)))
 (let (($x1238 (and (and (and (and (and $x893 $x885) $x880) $x878) (and $x905 true)) $x915)))
 (let (($x873 (= $i1_free_g20_3 1)))
 (let (($x874 (and $x792 $x873)))
 (let (($x1232 (and (=> (= loc_3 3) (and $x1227 (= loc_4 3))) (=> (= loc_3 5) (and $x1227 $x864)))))
 (let (($x1245 (and (and $x1232 (=> $x874 (and (and $x1238 $x855) $x919))) (=> $x924 (and $x1227 $x919)))))
 (let (($x673 (= $r_main0_3 $r_main0_2)))
 (let (($x670 (= $i2_main0_3 $i2_main0_2)))
 (let (($x664 (= $i0_h0_3 $i0_h0_2)))
 (let (($x665 (and true $x664)))
 (let (($x789 (and (and $x665 $x670) $x673)))
 (let (($x648 (= $p5_main0_3 $p5_main0_2)))
 (let (($x645 (= $p4_main0_3 $p4_main0_2)))
 (let (($x642 (= $p4_free_g20_3 $p4_free_g20_2)))
 (let (($x639 (= $p3_main0_3 $p3_main0_2)))
 (let (($x636 (= $p3_free_g20_3 $p3_free_g20_2)))
 (let (($x633 (= $p2_free_g20_3 $p2_free_g20_2)))
 (let (($x630 (= $p1_main0_3 $p1_main0_2)))
 (let (($x782 (and (and (and (and true (= $p0_main0_3 $p0_main0_2)) $x630) $x633) $x636)))
 (let (($x786 (and (and (and (and $x782 $x639) $x642) $x645) $x648)))
 (let (($x774 (= A_3 A5_3)))
 (let (($x771 (= $p9_main0_3 $p9_main01_3)))
 (let (($x769 (= $p8_main0_3 $p8_main01_3)))
 (let (($x767 (= $p7_main0_3 $p7_main01_3)))
 (let (($x765 (= $p6_main0_3 $p6_main01_3)))
 (let (($x763 (= $p10_main0_3 $p10_main01_3)))
 (let (($x761 (= $p0_free_g20_3 $p0_free_g201_3)))
 (let (($x762 (and (and (= $M.0_3 $M.03_3) (= $i1_free_g20_3 $i1_free_g201_3)) $x761)))
 (let (($x775 (and (and (and (and (and (and $x762 $x763) $x765) $x767) $x769) $x771) $x774)))
 (let (($x708 (= $i1_free_g201_3 0)))
 (let (($x714 (or (and (and (distinct $p0_free_g201_3 0) true) (= $i1_free_g201_3 1)) (and (not (and (distinct $p0_free_g201_3 0) true)) $x708))))
 (let (($x716 (= $p0_free_g201_3 $M.03_3)))
 (let (($x718 (= $M.03_3 0)))
 (let (($x721 (= A5_3 (free A4_3 $p10_main01_3))))
 (let (($x722 (freeable A4_3 $p10_main01_3)))
 (let (($x723 (and $x722 $x721)))
 (let (($x725 (= $p10_main01_3 $p9_main01_3)))
 (let (($x727 (= $p9_main01_3 $M.0_2)))
 (let (($x730 (= A4_3 (free A_2 $p8_main01_3))))
 (let (($x731 (freeable A_2 $p8_main01_3)))
 (let (($x732 (and $x731 $x730)))
 (let (($x734 (= $p8_main01_3 $p7_main01_3)))
 (let (($x739 (= $p7_main01_3 (read A_2 $p6_main01_3))))
 (let (($x747 (= $p6_main01_3 $M.0_2)))
 (let (($x1214 (and (and (and (and (and (and $x747 $x739) $x734) $x732) $x727) $x725) $x723)))
 (let (($x1220 (and (and (and (and (and $x1214 $x718) $x716) $x714) (and $x775 true)) $x786)))
 (let (($x611 (= loc_2 4)))
 (let (($x707 (and $x611 (not (= $i0_h0_2 1)))))
 (let (($x691 (= loc_3 5)))
 (let (($x674 (and (and (and $x665 (= $i1_free_g20_3 $i1_free_g20_2)) $x670) $x673)))
 (let (($x660 (= $p9_main0_3 $p9_main0_2)))
 (let (($x657 (= $p8_main0_3 $p8_main0_2)))
 (let (($x654 (= $p7_main0_3 $p7_main0_2)))
 (let (($x651 (= $p6_main0_3 $p6_main0_2)))
 (let (($x627 (= $p10_main0_3 $p10_main0_2)))
 (let (($x624 (= $p0_main0_3 $p0_main0_2)))
 (let (($x621 (= $p0_free_g20_3 $p0_free_g20_2)))
 (let (($x631 (and (and (and (and (and true (= $M.0_3 $M.0_2)) $x621) $x624) $x627) $x630)))
 (let (($x649 (and (and (and (and (and (and $x631 $x633) $x636) $x639) $x642) $x645) $x648)))
 (let (($x661 (and (and (and (and $x649 $x651) $x654) $x657) $x660)))
 (let (($x1185 (and false $x492)))
 (let (($x683 (= $i0_h0_2 1)))
 (let (($x684 (and $x611 $x683)))
 (let (($x558 (= loc_2 3)))
 (let (($x1208 (and (=> $x558 (and (and (and $x492 $x661) $x674) (= loc_3 3))) (=> $x684 (and (and (and $x1185 $x661) $x674) $x691)))))
 (let (($x550 (= $r_main0_2 $r_main0_1)))
 (let (($x547 (= $i2_main0_2 $i2_main0_1)))
 (let (($x544 (= $i1_free_g20_2 $i1_free_g20_1)))
 (let (($x551 (and (and (and (and true (= $i0_h0_2 $i0_h0_1)) $x544) $x547) $x550)))
 (let (($x537 (= $p9_main0_2 $p9_main0_1)))
 (let (($x534 (= $p8_main0_2 $p8_main0_1)))
 (let (($x531 (= $p7_main0_2 $p7_main0_1)))
 (let (($x528 (= $p6_main0_2 $p6_main0_1)))
 (let (($x519 (= $p4_free_g20_2 $p4_free_g20_1)))
 (let (($x513 (= $p3_free_g20_2 $p3_free_g20_1)))
 (let (($x510 (= $p2_free_g20_2 $p2_free_g20_1)))
 (let (($x507 (= $p1_main0_2 $p1_main0_1)))
 (let (($x504 (= $p10_main0_2 $p10_main0_1)))
 (let (($x501 (= $p0_main0_2 $p0_main0_1)))
 (let (($x498 (= $p0_free_g20_2 $p0_free_g20_1)))
 (let (($x508 (and (and (and (and (and true (= $M.0_2 $M.0_1)) $x498) $x501) $x504) $x507)))
 (let (($x514 (and (and $x508 $x510) $x513)))
 (let (($x607 (and (and (and (and (and $x514 $x519) $x528) $x531) $x534) $x537)))
 (let (($x598 (= A_2 A3_2)))
 (let (($x595 (= $p5_main0_2 $p5_main01_2)))
 (let (($x596 (and (and (= $p3_main0_2 $p3_main01_2) (= $p4_main0_2 $p4_main01_2)) $x595)))
 (let (($x599 (and $x596 $x598)))
 (let (($x1051 (and $x599 true)))
 (let (($x572 (= A3_2 (write A2_2 $p5_main01_2 $p3_main01_2))))
 (let (($x580 (= $p5_main01_2 $M.0_1)))
 (let (($x582 (= $p4_main01_2 $p3_main01_2)))
 (let (($x585 (= A2_2 (malloc A_1 $p3_main01_2 1))))
 (let (($x586 (mallocable_top A_1 $p3_main01_2 1)))
 (let (($x587 (and $x586 $x585)))
 (let (($x1195 (and (and (and (and (and (and $x587 $x582) $x580) $x572) $x1051) $x607) $x551)))
 (let (($x485 (= loc_1 2)))
 (let (($x568 (and $x485 (not (= $i2_main0_1 1)))))
 (let (($x525 (= $p5_main0_2 $p5_main0_1)))
 (let (($x522 (= $p4_main0_2 $p4_main0_1)))
 (let (($x526 (and (and (and (and $x514 (= $p3_main0_2 $p3_main0_1)) $x519) $x522) $x525)))
 (let (($x538 (and (and (and (and $x526 $x528) $x531) $x534) $x537)))
 (let (($x489 (= $i2_main0_1 1)))
 (let (($x490 (and $x485 $x489)))
 (let (($x1198 (and (=> $x490 (and (and (and $x1185 $x538) $x551) $x558)) (=> $x568 (and $x1195 $x611)))))
 (let (($x477 (= $r_main0_1 $r_main0_0)))
 (let (($x473 (= $i2_main0_1 $i2_main0_0)))
 (let (($x469 (= $i1_free_g20_1 $i1_free_g20_0)))
 (let (($x478 (and (and (and (and true (= $i0_h0_1 $i0_h0_0)) $x469) $x473) $x477)))
 (let (($x460 (= $p9_main0_1 $p9_main0_0)))
 (let (($x456 (= $p8_main0_1 $p8_main0_0)))
 (let (($x452 (= $p7_main0_1 $p7_main0_0)))
 (let (($x448 (= $p6_main0_1 $p6_main0_0)))
 (let (($x444 (= $p5_main0_1 $p5_main0_0)))
 (let (($x440 (= $p4_main0_1 $p4_main0_0)))
 (let (($x436 (= $p4_free_g20_1 $p4_free_g20_0)))
 (let (($x432 (= $p3_main0_1 $p3_main0_0)))
 (let (($x428 (= $p3_free_g20_1 $p3_free_g20_0)))
 (let (($x424 (= $p2_free_g20_1 $p2_free_g20_0)))
 (let (($x420 (= $p10_main0_1 $p10_main0_0)))
 (let (($x425 (and (and (and true (= $p0_free_g20_1 $p0_free_g20_0)) $x420) $x424)))
 (let (($x449 (and (and (and (and (and (and $x425 $x428) $x432) $x436) $x440) $x444) $x448)))
 (let (($x461 (and (and (and $x449 $x452) $x456) $x460)))
 (let (($x410 (= A_1 A1_1)))
 (let (($x407 (= $p1_main0_1 $p1_main01_1)))
 (let (($x408 (and (and (= $M.0_1 $M.02_1) (= $p0_main0_1 $p0_main01_1)) $x407)))
 (let (($x412 (and (and $x408 $x410) true)))
 (let (($x387 (= $M.02_1 $p0_main01_1)))
 (let (($x389 (= $p1_main01_1 $p0_main01_1)))
 (let (($x392 (= A1_1 (malloc A_0 $p0_main01_1 1))))
 (let (($x393 (mallocable_top A_0 $p0_main01_1 1)))
 (let (($x394 (and $x393 $x392)))
 (let (($x396 (= $M.01_1 0)))
 (let (($x1181 (and (and (and (and (and (and $x396 $x394) $x389) $x387) $x412) $x461) $x478)))
 (let (($x381 (= loc_0 1)))
 (let (($x376 (= A_0 epsilon)))
 (let (($x1225 (and (and (and $x376 (=> $x381 (and $x1181 $x485))) $x1198) (and $x1208 (=> $x707 (and (and $x1220 $x789) $x792))))))
 (and (and (and $x1225 $x1245) $x1259) $x1266)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
